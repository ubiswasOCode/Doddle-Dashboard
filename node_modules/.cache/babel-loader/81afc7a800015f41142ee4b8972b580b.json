{"ast":null,"code":"import _classCallCheck from\"/home/ocode/Downloads/Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ocode/Downloads/Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/ocode/Downloads/Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/ocode/Downloads/Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ocode/Downloads/Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import SweetAlert from\"react-bootstrap-sweetalert\";import{Card,Row,Col,CardBody,CardTitle}from\"reactstrap\";//Import Breadcrumb\nimport Breadcrumbs from\"../../components/Common/Breadcrumb\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UiSessionTimeout=/*#__PURE__*/function(_Component){_inherits(UiSessionTimeout,_Component);var _super=_createSuper(UiSessionTimeout);function UiSessionTimeout(props){var _this;_classCallCheck(this,UiSessionTimeout);_this=_super.call(this,props);_this.state={timeralert:null,timerswitch:false,seconds:0};_this.tick=_this.tick.bind(_assertThisInitialized(_this));return _this;}_createClass(UiSessionTimeout,[{key:\"tick\",value:function tick(){var _this2=this;this.interval=setInterval(function(){_this2.setState(function(prevState){return{seconds:prevState.seconds+1};});},1000);}},{key:\"componentDidMount\",value:function componentDidMount(){this.main_function();}},{key:\"hideAlert\",value:function hideAlert(){window.location=\"/login\";}},{key:\"confirmAlert\",value:function confirmAlert(){this.setState({timeralert:null});}},{key:\"main_function\",value:function main_function(){setTimeout(function(){setTimeout(function(){this.function1();}.bind(this),6000);this.function2();}.bind(this),6000);}},{key:\"function1\",value:function function1(){if(window.location.pathname===\"/ui-session-timeout\"){window.location=\"/login\";}}},{key:\"function2\",value:function function2(){var _this3=this;this.tick();var nextmsg=function nextmsg(){return/*#__PURE__*/_jsxs(SweetAlert,{showCancel:true,confirmBtnText:\"Stay Connected\",cancelBtnText:\"Logout\",confirmBtnBsStyle:\"success\",cancelBtnBsStyle:\"danger\",title:\"Your Session is About to Expire!\",onCancel:function onCancel(){return _this3.hideAlert();},onConfirm:function onConfirm(){return _this3.confirmAlert();},children:[\"Redirecting in 10s seconds.\",/*#__PURE__*/_jsx(\"br\",{})]});};this.setState({timeralert:nextmsg()});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"page-content\",children:[this.state.timeralert,/*#__PURE__*/_jsx(Breadcrumbs,{title:\"UI Elements\",breadcrumbItem:\"Session Timeout\"}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(CardTitle,{children:\"Bootstrap-session-timeout\"}),/*#__PURE__*/_jsx(\"p\",{className:\"sub-header\",children:\"Session timeout and keep-alive control with a nice Bootstrap warning dialog.\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"After a set amount of idle time, a Bootstrap warning dialog is shown to the user with the option to either log out, or stay connected. If \\\"Logout\\\" button is selected, the page is redirected to a logout URL. If \\\"Stay Connected\\\" is selected the dialog closes and the session is kept alive. If no option is selected after another set amount of idle time, the page is automatically redirected to a set timeout URL.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Idle time is defined as no mouse, keyboard or touch event activity registered by the browser.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:\"As long as the user is active, the (optional) keep-alive URL keeps getting pinged and the session stays alive. If you have no need to keep the server-side session alive via the keep-alive URL, you can also use this plugin as a simple lock mechanism that redirects to your lock-session or log-out URL after a set amount of idle time.\"})]})]})})})})]})});}}]);return UiSessionTimeout;}(Component);export default UiSessionTimeout;","map":{"version":3,"sources":["/home/ocode/Downloads/Admin/src/pages/Ui/UiSessionTimeout.js"],"names":["React","Component","SweetAlert","Card","Row","Col","CardBody","CardTitle","Breadcrumbs","UiSessionTimeout","props","state","timeralert","timerswitch","seconds","tick","bind","interval","setInterval","setState","prevState","main_function","window","location","setTimeout","function1","function2","pathname","nextmsg","hideAlert","confirmAlert"],"mappings":"0tBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,UAAP,KAAuB,4BAAvB,CACA,OAASC,IAAT,CAAeC,GAAf,CAAoBC,GAApB,CAAyBC,QAAzB,CAAmCC,SAAnC,KAAoD,YAApD,CAEA;AACA,MAAOC,CAAAA,WAAP,KAAwB,oCAAxB,C,2FAEMC,CAAAA,gB,oHACJ,0BAAYC,KAAZ,CAAmB,kDACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CAAEC,UAAU,CAAE,IAAd,CAAoBC,WAAW,CAAE,KAAjC,CAAwCC,OAAO,CAAE,CAAjD,CAAb,CACA,MAAKC,IAAL,CAAY,MAAKA,IAAL,CAAUC,IAAV,+BAAZ,CAHiB,aAIlB,C,iDACD,eAAO,iBACL,KAAKC,QAAL,CAAgBC,WAAW,CAAC,UAAM,CAChC,MAAI,CAACC,QAAL,CAAc,SAAAC,SAAS,QAAK,CAAEN,OAAO,CAAEM,SAAS,CAACN,OAAV,CAAoB,CAA/B,CAAL,EAAvB,EACD,CAF0B,CAExB,IAFwB,CAA3B,CAGD,C,iCAED,4BAAoB,CAClB,KAAKO,aAAL,GACD,C,yBAED,oBAAY,CACVC,MAAM,CAACC,QAAP,CAAkB,QAAlB,CACD,C,4BACD,uBAAe,CACb,KAAKJ,QAAL,CAAc,CAAEP,UAAU,CAAE,IAAd,CAAd,EACD,C,6BACD,wBAAgB,CACdY,UAAU,CACR,UAAY,CACVA,UAAU,CACR,UAAY,CACV,KAAKC,SAAL,GACD,CAFD,CAEET,IAFF,CAEO,IAFP,CADQ,CAIR,IAJQ,CAAV,CAMA,KAAKU,SAAL,GACD,CARD,CAQEV,IARF,CAQO,IARP,CADQ,CAUR,IAVQ,CAAV,CAYD,C,yBACD,oBAAY,CACV,GAAIM,MAAM,CAACC,QAAP,CAAgBI,QAAhB,GAA6B,qBAAjC,CAAwD,CACtDL,MAAM,CAACC,QAAP,CAAkB,QAAlB,CACD,CACF,C,yBACD,oBAAY,iBACV,KAAKR,IAAL,GACA,GAAMa,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,sBACd,MAAC,UAAD,EACE,UAAU,KADZ,CAEE,cAAc,CAAC,gBAFjB,CAGE,aAAa,CAAC,QAHhB,CAIE,iBAAiB,CAAC,SAJpB,CAKE,gBAAgB,CAAC,QALnB,CAME,KAAK,CAAC,kCANR,CAOE,QAAQ,CAAE,0BAAM,CAAA,MAAI,CAACC,SAAL,EAAN,EAPZ,CAQE,SAAS,CAAE,2BAAM,CAAA,MAAI,CAACC,YAAL,EAAN,EARb,sDAU6B,aAV7B,GADc,EAAhB,CAcA,KAAKX,QAAL,CAAc,CAAEP,UAAU,CAAEgB,OAAO,EAArB,CAAd,EACD,C,sBACD,iBAAS,CACP,mBACE,KAAC,KAAD,CAAO,QAAP,wBACE,aAAK,SAAS,CAAC,cAAf,WAEK,KAAKjB,KAAL,CAAWC,UAFhB,cAII,KAAC,WAAD,EAAa,KAAK,CAAC,aAAnB,CAAiC,cAAc,CAAC,iBAAhD,EAJJ,cAMI,KAAC,GAAD,wBACE,KAAC,GAAD,wBACE,KAAC,IAAD,wBACE,MAAC,QAAD,yBACE,KAAC,SAAD,wCADF,cAEE,UAAG,SAAS,CAAC,YAAb,0FAFF,cAOE,oCACE,qbADF,cAWE,oHAXF,cAgBE,UAAG,SAAS,CAAC,MAAb,0VAhBF,GAPF,GADF,EADF,EADF,EANJ,GADF,EADF,CAmDD,C,8BA/G4BX,S,EAkH/B,cAAeQ,CAAAA,gBAAf","sourcesContent":["import React, { Component } from \"react\"\n\nimport SweetAlert from \"react-bootstrap-sweetalert\"\nimport { Card, Row, Col, CardBody, CardTitle } from \"reactstrap\"\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\n\nclass UiSessionTimeout extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { timeralert: null, timerswitch: false, seconds: 0 }\n    this.tick = this.tick.bind(this)\n  }\n  tick() {\n    this.interval = setInterval(() => {\n      this.setState(prevState => ({ seconds: prevState.seconds + 1 }))\n    }, 1000)\n  }\n\n  componentDidMount() {\n    this.main_function()\n  }\n\n  hideAlert() {\n    window.location = \"/login\"\n  }\n  confirmAlert() {\n    this.setState({ timeralert: null })\n  }\n  main_function() {\n    setTimeout(\n      function () {\n        setTimeout(\n          function () {\n            this.function1()\n          }.bind(this),\n          6000\n        )\n        this.function2()\n      }.bind(this),\n      6000\n    )\n  }\n  function1() {\n    if (window.location.pathname === \"/ui-session-timeout\") {\n      window.location = \"/login\"\n    }\n  }\n  function2() {\n    this.tick()\n    const nextmsg = () => (\n      <SweetAlert\n        showCancel\n        confirmBtnText=\"Stay Connected\"\n        cancelBtnText=\"Logout\"\n        confirmBtnBsStyle=\"success\"\n        cancelBtnBsStyle=\"danger\"\n        title=\"Your Session is About to Expire!\"\n        onCancel={() => this.hideAlert()}\n        onConfirm={() => this.confirmAlert()}\n      >\n        Redirecting in 10s seconds.<br></br>\n      </SweetAlert>\n    )\n    this.setState({ timeralert: nextmsg() })\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"page-content\">\n         \n            {this.state.timeralert}\n\n            <Breadcrumbs title=\"UI Elements\" breadcrumbItem=\"Session Timeout\" />\n\n            <Row>\n              <Col>\n                <Card>\n                  <CardBody>\n                    <CardTitle>Bootstrap-session-timeout</CardTitle>\n                    <p className=\"sub-header\">\n                      Session timeout and keep-alive control with a nice\n                      Bootstrap warning dialog.\n                    </p>\n\n                    <div>\n                      <p>\n                        After a set amount of idle time, a Bootstrap warning\n                        dialog is shown to the user with the option to either\n                        log out, or stay connected. If \"Logout\" button is\n                        selected, the page is redirected to a logout URL. If\n                        \"Stay Connected\" is selected the dialog closes and the\n                        session is kept alive. If no option is selected after\n                        another set amount of idle time, the page is\n                        automatically redirected to a set timeout URL.\n                      </p>\n                      <p>\n                        Idle time is defined as no mouse, keyboard or touch\n                        event activity registered by the browser.\n                      </p>\n\n                      <p className=\"mb-0\">\n                        As long as the user is active, the (optional) keep-alive\n                        URL keeps getting pinged and the session stays alive. If\n                        you have no need to keep the server-side session alive\n                        via the keep-alive URL, you can also use this plugin as\n                        a simple lock mechanism that redirects to your\n                        lock-session or log-out URL after a set amount of idle\n                        time.\n                      </p>\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default UiSessionTimeout\n"]},"metadata":{},"sourceType":"module"}