{"ast":null,"code":"import { takeEvery, fork, put, all, call } from \"redux-saga/effects\"; // Login Redux States\n\nimport { EDIT_PROFILE } from \"./actionTypes\";\nimport { profileSuccess, profileError } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\";\nimport { postFakeProfile, postJwtProfile } from \"../../../helpers/fakebackend_helper\";\nconst fireBaseBackend = getFirebaseBackend();\n\nfunction* editProfile({\n  payload: {\n    user\n  }\n}) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.editProfileAPI, user.username, user.idx);\n      yield put(profileSuccess(response));\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\n      const response = yield call(postJwtProfile, \"/post-jwt-profile\", {\n        username: user.username,\n        idx: user.idx\n      });\n      yield put(profileSuccess(response));\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"fake\") {\n      const response = yield call(postFakeProfile, {\n        username: user.username,\n        idx: user.idx\n      });\n      yield put(profileSuccess(response));\n    }\n  } catch (error) {\n    yield put(profileError(error));\n  }\n}\n\nexport function* watchProfile() {\n  yield takeEvery(EDIT_PROFILE, editProfile);\n}\n\nfunction* ProfileSaga() {\n  yield all([fork(watchProfile)]);\n}\n\n_c = ProfileSaga;\nexport default ProfileSaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileSaga\");","map":{"version":3,"sources":["/home/ocode/Downloads/Admin/src/store/auth/profile/saga.js"],"names":["takeEvery","fork","put","all","call","EDIT_PROFILE","profileSuccess","profileError","getFirebaseBackend","postFakeProfile","postJwtProfile","fireBaseBackend","editProfile","payload","user","process","env","REACT_APP_DEFAULTAUTH","response","editProfileAPI","username","idx","error","watchProfile","ProfileSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,QAAgD,oBAAhD,C,CAEA;;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,WAA7C,C,CAEA;;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,SACEC,eADF,EAEEC,cAFF,QAGO,qCAHP;AAKA,MAAMC,eAAe,GAAGH,kBAAkB,EAA1C;;AAEA,UAAUI,WAAV,CAAsB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF;AAAX,CAAtB,EAA6C;AAC3C,MAAI;AACF,QAAIC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,UAA1C,EAAsD;AACpD,YAAMC,QAAQ,GAAG,MAAMd,IAAI,CACzBO,eAAe,CAACQ,cADS,EAEzBL,IAAI,CAACM,QAFoB,EAGzBN,IAAI,CAACO,GAHoB,CAA3B;AAKA,YAAMnB,GAAG,CAACI,cAAc,CAACY,QAAD,CAAf,CAAT;AACD,KAPD,MAOO,IAAIH,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,KAA1C,EAAiD;AACtD,YAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACM,cAAD,EAAiB,mBAAjB,EAAsC;AAC/DU,QAAAA,QAAQ,EAAEN,IAAI,CAACM,QADgD;AAE/DC,QAAAA,GAAG,EAAEP,IAAI,CAACO;AAFqD,OAAtC,CAA3B;AAIA,YAAMnB,GAAG,CAACI,cAAc,CAACY,QAAD,CAAf,CAAT;AACD,KANM,MAMA,IAAIH,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,MAA1C,EAAkD;AACvD,YAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACK,eAAD,EAAkB;AAC3CW,QAAAA,QAAQ,EAAEN,IAAI,CAACM,QAD4B;AAE3CC,QAAAA,GAAG,EAAEP,IAAI,CAACO;AAFiC,OAAlB,CAA3B;AAIA,YAAMnB,GAAG,CAACI,cAAc,CAACY,QAAD,CAAf,CAAT;AACD;AACF,GArBD,CAqBE,OAAOI,KAAP,EAAc;AACd,UAAMpB,GAAG,CAACK,YAAY,CAACe,KAAD,CAAb,CAAT;AACD;AACF;;AACD,OAAO,UAAUC,YAAV,GAAyB;AAC9B,QAAMvB,SAAS,CAACK,YAAD,EAAeO,WAAf,CAAf;AACD;;AAED,UAAUY,WAAV,GAAwB;AACtB,QAAMrB,GAAG,CAAC,CAACF,IAAI,CAACsB,YAAD,CAAL,CAAD,CAAT;AACD;;KAFSC,W;AAIV,eAAeA,WAAf","sourcesContent":["import { takeEvery, fork, put, all, call } from \"redux-saga/effects\"\n\n// Login Redux States\nimport { EDIT_PROFILE } from \"./actionTypes\"\nimport { profileSuccess, profileError } from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\"\nimport {\n  postFakeProfile,\n  postJwtProfile,\n} from \"../../../helpers/fakebackend_helper\"\n\nconst fireBaseBackend = getFirebaseBackend()\n\nfunction* editProfile({ payload: { user } }) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(\n        fireBaseBackend.editProfileAPI,\n        user.username,\n        user.idx\n      )\n      yield put(profileSuccess(response))\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\n      const response = yield call(postJwtProfile, \"/post-jwt-profile\", {\n        username: user.username,\n        idx: user.idx,\n      })\n      yield put(profileSuccess(response))\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"fake\") {\n      const response = yield call(postFakeProfile, {\n        username: user.username,\n        idx: user.idx,\n      })\n      yield put(profileSuccess(response))\n    }\n  } catch (error) {\n    yield put(profileError(error))\n  }\n}\nexport function* watchProfile() {\n  yield takeEvery(EDIT_PROFILE, editProfile)\n}\n\nfunction* ProfileSaga() {\n  yield all([fork(watchProfile)])\n}\n\nexport default ProfileSaga\n"]},"metadata":{},"sourceType":"module"}