{"ast":null,"code":"import axios from \"axios\";\nimport { post, del, get, put } from \"./api_helper\";\nimport * as url from \"./url_helper\"; // Gets the logged in user data from local session\n\nconst getLoggedInUser = () => {\n  const user = localStorage.getItem(\"user\");\n  if (user) return JSON.parse(user);\n  return null;\n}; //is user is logged in\n\n\nconst isUserAuthenticated = () => {\n  return getLoggedInUser() !== null;\n}; // Register Method\n\n\nconst postFakeRegister = data => post(url.POST_FAKE_REGISTER, data); // Login Method\n\n\nconst postFakeLogin = data => post(url.POST_FAKE_LOGIN, data); // postForgetPwd\n\n\nconst postFakeForgetPwd = data => post(url.POST_FAKE_PASSWORD_FORGET, data); // Edit profile\n\n\nconst postJwtProfile = data => post(url.POST_EDIT_JWT_PROFILE, data);\n\nconst postFakeProfile = data => post(url.POST_EDIT_PROFILE, data); // Register Method\n\n\nconst postJwtRegister = (url, data) => {\n  return axios.post(url, data).then(response => {\n    if (response.status >= 200 || response.status <= 299) return response.data;\n    throw response.data;\n  }).catch(err => {\n    let message;\n\n    if (err.response && err.response.status) {\n      switch (err.response.status) {\n        case 404:\n          message = \"Sorry! the page you are looking for could not be found\";\n          break;\n\n        case 500:\n          message = \"Sorry! something went wrong, please contact our support team\";\n          break;\n\n        case 401:\n          message = \"Invalid credentials\";\n          break;\n\n        default:\n          message = err[1];\n          break;\n      }\n    }\n\n    throw message;\n  });\n}; // Login Method\n\n\nconst postJwtLogin = data => post(url.POST_FAKE_JWT_LOGIN, data); // postForgetPwd\n\n\nconst postJwtForgetPwd = data => post(url.POST_FAKE_JWT_PASSWORD_FORGET, data); // postSocialLogin\n\n\nexport const postSocialLogin = data => post(url.SOCIAL_LOGIN, data); // get Products\n\nexport const getProducts = () => get(url.GET_PRODUCTS); // get Product detail\n\nexport const getProductDetail = id => get(`${url.GET_PRODUCTS_DETAIL}/${id}`, {\n  params: {\n    id\n  }\n}); // get Events\n\nexport const getEvents = () => get(url.GET_EVENTS); // add Events\n\nexport const addNewEvent = event => post(url.ADD_NEW_EVENT, event); // update Event\n\nexport const updateEvent = event => put(url.UPDATE_EVENT, event); // delete Event\n\nexport const deleteEvent = event => del(url.DELETE_EVENT, {\n  headers: {\n    event\n  }\n}); // get Categories\n\nexport const getCategories = () => get(url.GET_CATEGORIES); // get chats\n\nexport const getChats = () => get(url.GET_CHATS); // get groups\n\nexport const getGroups = () => get(url.GET_GROUPS); // get Contacts\n\nexport const getContacts = () => get(url.GET_CONTACTS); // get messages\n\nexport const getMessages = (roomId = \"\") => get(`${url.GET_MESSAGES}/${roomId}`, {\n  params: {\n    roomId\n  }\n}); // post messages\n\nexport const addMessage = message => post(url.ADD_MESSAGE, message); // get project\n\nexport const getProjects = () => get(url.GET_PROJECTS); // get project details\n\nexport const getProjectsDetails = id => get(`${url.GET_PROJECT_DETAIL}/${id}`, {\n  params: {\n    id\n  }\n}); // get tasks\n\nexport const getTasks = () => get(url.GET_TASKS); // get contacts\n\nexport const getUsers = () => get(url.GET_USERS);\nexport const getUserProfile = () => get(url.GET_USER_PROFILE);\nexport { getLoggedInUser, isUserAuthenticated, postFakeRegister, postFakeLogin, postFakeProfile, postFakeForgetPwd, postJwtRegister, postJwtLogin, postJwtForgetPwd, postJwtProfile };","map":{"version":3,"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/src/helpers/fakebackend_helper.js"],"names":["axios","post","del","get","put","url","getLoggedInUser","user","localStorage","getItem","JSON","parse","isUserAuthenticated","postFakeRegister","data","POST_FAKE_REGISTER","postFakeLogin","POST_FAKE_LOGIN","postFakeForgetPwd","POST_FAKE_PASSWORD_FORGET","postJwtProfile","POST_EDIT_JWT_PROFILE","postFakeProfile","POST_EDIT_PROFILE","postJwtRegister","then","response","status","catch","err","message","postJwtLogin","POST_FAKE_JWT_LOGIN","postJwtForgetPwd","POST_FAKE_JWT_PASSWORD_FORGET","postSocialLogin","SOCIAL_LOGIN","getProducts","GET_PRODUCTS","getProductDetail","id","GET_PRODUCTS_DETAIL","params","getEvents","GET_EVENTS","addNewEvent","event","ADD_NEW_EVENT","updateEvent","UPDATE_EVENT","deleteEvent","DELETE_EVENT","headers","getCategories","GET_CATEGORIES","getChats","GET_CHATS","getGroups","GET_GROUPS","getContacts","GET_CONTACTS","getMessages","roomId","GET_MESSAGES","addMessage","ADD_MESSAGE","getProjects","GET_PROJECTS","getProjectsDetails","GET_PROJECT_DETAIL","getTasks","GET_TASKS","getUsers","GET_USERS","getUserProfile","GET_USER_PROFILE"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport { post, del, get, put } from \"./api_helper\"\nimport * as url from \"./url_helper\"\n\n// Gets the logged in user data from local session\nconst getLoggedInUser = () => {\n  const user = localStorage.getItem(\"user\")\n  if (user) return JSON.parse(user)\n  return null\n}\n\n//is user is logged in\nconst isUserAuthenticated = () => {\n  return getLoggedInUser() !== null\n}\n\n// Register Method\nconst postFakeRegister = (data) => post(url.POST_FAKE_REGISTER, data)\n\n// Login Method\nconst postFakeLogin = data => post(url.POST_FAKE_LOGIN, data)\n\n// postForgetPwd\nconst postFakeForgetPwd = data => post(url.POST_FAKE_PASSWORD_FORGET, data)\n\n// Edit profile\nconst postJwtProfile = data => post(url.POST_EDIT_JWT_PROFILE, data)\n\nconst postFakeProfile = data => post(url.POST_EDIT_PROFILE, data)\n\n// Register Method\nconst postJwtRegister = (url, data) => {\n  return axios\n    .post(url, data)\n    .then(response => {\n      if (response.status >= 200 || response.status <= 299) return response.data\n      throw response.data\n    })\n    .catch(err => {\n      let message\n      if (err.response && err.response.status) {\n        switch (err.response.status) {\n          case 404:\n            message = \"Sorry! the page you are looking for could not be found\"\n            break\n          case 500:\n            message =\n              \"Sorry! something went wrong, please contact our support team\"\n            break\n          case 401:\n            message = \"Invalid credentials\"\n            break\n          default:\n            message = err[1]\n            break\n        }\n      }\n      throw message\n    })\n}\n\n// Login Method\nconst postJwtLogin = data => post(url.POST_FAKE_JWT_LOGIN, data)\n\n// postForgetPwd\nconst postJwtForgetPwd = data => post(url.POST_FAKE_JWT_PASSWORD_FORGET, data)\n\n// postSocialLogin\nexport const postSocialLogin = data => post(url.SOCIAL_LOGIN, data)\n\n// get Products\nexport const getProducts = () => get(url.GET_PRODUCTS)\n\n// get Product detail\nexport const getProductDetail = id =>\n  get(`${url.GET_PRODUCTS_DETAIL}/${id}`, { params: { id } })\n\n// get Events\nexport const getEvents = () => get(url.GET_EVENTS)\n\n// add Events\nexport const addNewEvent = event => post(url.ADD_NEW_EVENT, event)\n\n// update Event\nexport const updateEvent = event => put(url.UPDATE_EVENT, event)\n\n// delete Event\nexport const deleteEvent = event =>\n  del(url.DELETE_EVENT, { headers: { event } })\n\n// get Categories\nexport const getCategories = () => get(url.GET_CATEGORIES)\n\n// get chats\nexport const getChats = () => get(url.GET_CHATS)\n\n// get groups\nexport const getGroups = () => get(url.GET_GROUPS)\n\n// get Contacts\nexport const getContacts = () => get(url.GET_CONTACTS)\n\n// get messages\nexport const getMessages = (roomId = \"\") =>\n  get(`${url.GET_MESSAGES}/${roomId}`, { params: { roomId } })\n\n// post messages\nexport const addMessage = message => post(url.ADD_MESSAGE, message)\n\n// get project\nexport const getProjects = () => get(url.GET_PROJECTS)\n\n// get project details\nexport const getProjectsDetails = id =>\n  get(`${url.GET_PROJECT_DETAIL}/${id}`, { params: { id } })\n\n// get tasks\nexport const getTasks = () => get(url.GET_TASKS)\n\n// get contacts\nexport const getUsers = () => get(url.GET_USERS)\n\nexport const getUserProfile = () => get(url.GET_USER_PROFILE)\n\nexport {\n  getLoggedInUser,\n  isUserAuthenticated,\n  postFakeRegister,\n  postFakeLogin,\n  postFakeProfile,\n  postFakeForgetPwd,\n  postJwtRegister,\n  postJwtLogin,\n  postJwtForgetPwd,\n  postJwtProfile,\n}\n"]},"metadata":{},"sourceType":"module"}