{"ast":null,"code":"import i18n from\"i18next\";import detector from\"i18next-browser-languagedetector\";import{initReactI18next}from\"react-i18next\";import translationGr from\"./locales/gr/translation.json\";import translationIT from\"./locales/it/translation.json\";import translationRS from\"./locales/rs/translation.json\";import translationSP from\"./locales/sp/translation.json\";import translationENG from\"./locales/eng/translation.json\";// the translations\nvar resources={gr:{translation:translationGr},it:{translation:translationIT},rs:{translation:translationRS},sp:{translation:translationSP},eng:{translation:translationENG}};var language=localStorage.getItem(\"I18N_LANGUAGE\");if(!language){localStorage.setItem(\"I18N_LANGUAGE\",\"en\");}i18n.use(detector).use(initReactI18next)// passes i18n down to react-i18next\n.init({resources:resources,lng:localStorage.getItem(\"I18N_LANGUAGE\")||\"en\",fallbackLng:\"en\",// use en if detected lng is not available\nkeySeparator:false,// we do not use keys in form messages.welcome\ninterpolation:{escapeValue:false// react already safes from xss\n}});export default i18n;","map":{"version":3,"sources":["/home/ocode/Downloads/Admin/src/i18n.js"],"names":["i18n","detector","initReactI18next","translationGr","translationIT","translationRS","translationSP","translationENG","resources","gr","translation","it","rs","sp","eng","language","localStorage","getItem","setItem","use","init","lng","fallbackLng","keySeparator","interpolation","escapeValue"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kCAArB,CACA,OAASC,gBAAT,KAAiC,eAAjC,CAEA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,gCAA3B,CAEA;AACA,GAAMC,CAAAA,SAAS,CAAG,CAChBC,EAAE,CAAE,CACFC,WAAW,CAAEP,aADX,CADY,CAIhBQ,EAAE,CAAE,CACFD,WAAW,CAAEN,aADX,CAJY,CAOhBQ,EAAE,CAAE,CACFF,WAAW,CAAEL,aADX,CAPY,CAUhBQ,EAAE,CAAE,CACFH,WAAW,CAAEJ,aADX,CAVY,CAahBQ,GAAG,CAAE,CACHJ,WAAW,CAAEH,cADV,CAbW,CAAlB,CAkBA,GAAMQ,CAAAA,QAAQ,CAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAjB,CACA,GAAI,CAACF,QAAL,CAAe,CACbC,YAAY,CAACE,OAAb,CAAqB,eAArB,CAAsC,IAAtC,EACD,CAEDlB,IAAI,CACDmB,GADH,CACOlB,QADP,EAEGkB,GAFH,CAEOjB,gBAFP,CAEyB;AAFzB,CAGGkB,IAHH,CAGQ,CACJZ,SAAS,CAATA,SADI,CAEJa,GAAG,CAAEL,YAAY,CAACC,OAAb,CAAqB,eAArB,GAAyC,IAF1C,CAGJK,WAAW,CAAE,IAHT,CAGe;AAEnBC,YAAY,CAAE,KALV,CAKiB;AAErBC,aAAa,CAAE,CACbC,WAAW,CAAE,KAAO;AADP,CAPX,CAHR,EAeA,cAAezB,CAAAA,IAAf","sourcesContent":["import i18n from \"i18next\"\nimport detector from \"i18next-browser-languagedetector\"\nimport { initReactI18next } from \"react-i18next\"\n\nimport translationGr from \"./locales/gr/translation.json\"\nimport translationIT from \"./locales/it/translation.json\"\nimport translationRS from \"./locales/rs/translation.json\"\nimport translationSP from \"./locales/sp/translation.json\"\nimport translationENG from \"./locales/eng/translation.json\"\n\n// the translations\nconst resources = {\n  gr: {\n    translation: translationGr,\n  },\n  it: {\n    translation: translationIT,\n  },\n  rs: {\n    translation: translationRS,\n  },\n  sp: {\n    translation: translationSP,\n  },\n  eng: {\n    translation: translationENG,\n  },\n}\n\nconst language = localStorage.getItem(\"I18N_LANGUAGE\")\nif (!language) {\n  localStorage.setItem(\"I18N_LANGUAGE\", \"en\")\n}\n\ni18n\n  .use(detector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: localStorage.getItem(\"I18N_LANGUAGE\") || \"en\",\n    fallbackLng: \"en\", // use en if detected lng is not available\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  })\n\nexport default i18n\n"]},"metadata":{},"sourceType":"module"}