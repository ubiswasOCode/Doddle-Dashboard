{"ast":null,"code":"var _jsxFileName = \"/home/ocode-2023/Desktop/Dashboard/Admin/src/pages/AllCharts/echart/linebarchart.js\";\nimport React, { Component } from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LineBar extends Component {\n  constructor() {\n    super(...arguments);\n    this.getOption = () => {\n      return {\n        grid: {\n          zlevel: 0,\n          x: 50,\n          x2: 50,\n          y: 30,\n          y2: 30,\n          borderWidth: 0,\n          backgroundColor: \"rgba(0,0,0,0)\",\n          borderColor: \"rgba(0,0,0,0)\"\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"cross\",\n            crossStyle: {\n              color: \"#999\"\n            }\n          }\n        },\n        toolbox: {\n          feature: {\n            dataView: {\n              show: true,\n              readOnly: false\n            },\n            magicType: {\n              show: true,\n              type: [\"line\", \"bar\"]\n            },\n            restore: {\n              show: true\n            },\n            saveAsImage: {\n              show: true\n            }\n          }\n        },\n        color: [\"#3c4ccf\", \"#02a499\", \"#38a4f8\"],\n        legend: {\n          data: [\"Evaporation\", \"Precipitation\", \"Average temperature\"],\n          textStyle: {\n            color: [\"#74788d\"]\n          }\n        },\n        xAxis: [{\n          type: \"category\",\n          data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\"],\n          axisPointer: {\n            type: \"shadow\"\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"#74788d\"\n            }\n          }\n        }],\n        yAxis: [{\n          type: \"value\",\n          name: \"Water volume\",\n          min: 0,\n          max: 250,\n          interval: 50,\n          axisLabel: {\n            formatter: \"{value} ml\"\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"#74788d\"\n            }\n          }\n        }, {\n          type: \"value\",\n          name: \"Temperature\",\n          min: 0,\n          max: 25,\n          interval: 5,\n          axisLabel: {\n            formatter: \"{value} °C\"\n          }\n        }],\n        series: [{\n          name: \"Evaporation\",\n          type: \"bar\",\n          data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2]\n        }, {\n          name: \"Precipitation\",\n          type: \"bar\",\n          data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2]\n        }, {\n          name: \"Average Temperature\",\n          type: \"line\",\n          yAxisIndex: 1,\n          data: [2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4]\n        }],\n        textStyle: {\n          color: [\"#74788d\"]\n        }\n      };\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ReactEcharts, {\n        style: {\n          height: \"350px\"\n        },\n        option: this.getOption()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LineBar;","map":{"version":3,"names":["React","Component","ReactEcharts","jsxDEV","_jsxDEV","LineBar","constructor","arguments","getOption","grid","zlevel","x","x2","y","y2","borderWidth","backgroundColor","borderColor","tooltip","trigger","axisPointer","type","crossStyle","color","toolbox","feature","dataView","show","readOnly","magicType","restore","saveAsImage","legend","data","textStyle","xAxis","axisLine","lineStyle","yAxis","name","min","max","interval","axisLabel","formatter","series","yAxisIndex","render","Fragment","children","style","height","option","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/src/pages/AllCharts/echart/linebarchart.js"],"sourcesContent":["import React, { Component } from \"react\"\nimport ReactEcharts from \"echarts-for-react\"\n\nclass LineBar extends Component {\n  getOption = () => {\n    return {\n      grid: {\n        zlevel: 0,\n        x: 50,\n        x2: 50,\n        y: 30,\n        y2: 30,\n        borderWidth: 0,\n        backgroundColor: \"rgba(0,0,0,0)\",\n        borderColor: \"rgba(0,0,0,0)\",\n      },\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          type: \"cross\",\n          crossStyle: {\n            color: \"#999\",\n          },\n        },\n      },\n      toolbox: {\n        feature: {\n          dataView: { show: true, readOnly: false },\n          magicType: { show: true, type: [\"line\", \"bar\"] },\n          restore: { show: true },\n          saveAsImage: { show: true },\n        },\n      },\n      color: [\"#3c4ccf\", \"#02a499\", \"#38a4f8\"],\n      legend: {\n        data: [\"Evaporation\", \"Precipitation\", \"Average temperature\"],\n        textStyle: {\n          color: [\"#74788d\"],\n        },\n      },\n      xAxis: [\n        {\n          type: \"category\",\n          data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\"],\n          axisPointer: {\n            type: \"shadow\",\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"#74788d\",\n            },\n          },\n        },\n      ],\n      yAxis: [\n        {\n          type: \"value\",\n          name: \"Water volume\",\n          min: 0,\n          max: 250,\n          interval: 50,\n          axisLabel: {\n            formatter: \"{value} ml\",\n          },\n          axisLine: {\n            lineStyle: {\n              color: \"#74788d\",\n            },\n          },\n        },\n        {\n          type: \"value\",\n          name: \"Temperature\",\n          min: 0,\n          max: 25,\n          interval: 5,\n          axisLabel: {\n            formatter: \"{value} °C\",\n          },\n        },\n      ],\n      series: [\n        {\n          name: \"Evaporation\",\n          type: \"bar\",\n          data: [2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2],\n        },\n        {\n          name: \"Precipitation\",\n          type: \"bar\",\n          data: [2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2],\n        },\n        {\n          name: \"Average Temperature\",\n          type: \"line\",\n          yAxisIndex: 1,\n          data: [2.0, 2.2, 3.3, 4.5, 6.3, 10.2, 20.3, 23.4],\n        },\n      ],\n      textStyle: {\n        color: [\"#74788d\"],\n      },\n    }\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <ReactEcharts style={{ height: \"350px\" }} option={this.getOption()} />\n      </React.Fragment>\n    )\n  }\n}\nexport default LineBar\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}