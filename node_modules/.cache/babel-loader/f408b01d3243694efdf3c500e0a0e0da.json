{"ast":null,"code":"var _jsxFileName = \"/home/ocode-2023/Desktop/Dashboard/Admin/src/pages/Forms/FormValidations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Row, Col, Card, CardBody, FormGroup, Button, CardTitle, CardSubtitle, Label, Input } from \"reactstrap\";\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormValidations = () => {\n  _s();\n\n  const [fnm, setfnm] = useState(false);\n  const [lnm, setlnm] = useState(false);\n  const [unm, setunm] = useState(false);\n  const [city, setcity] = useState(false);\n  const [stateV, setstateV] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    var fnm = document.getElementById(\"validationTooltip01\").value;\n    var lnm = document.getElementById(\"validationTooltip02\").value;\n    var unm = document.getElementById(\"validationTooltipUsername\").value;\n    var city = document.getElementById(\"validationTooltip03\").value;\n    var stateV = document.getElementById(\"validationTooltip04\").value;\n\n    if (fnm === \"\") {\n      setfnm(false);\n    } else {\n      setfnm(true);\n    }\n\n    if (lnm === \"\") {\n      setlnm(false);\n    } else {\n      setlnm(true);\n    }\n\n    if (unm === \"\") {\n      setunm(false);\n    } else {\n      setunm(true);\n    }\n\n    if (city === \"\") {\n      setcity(false);\n    } else {\n      setcity(true);\n    }\n\n    if (stateV === \"\") {\n      setstateV(false);\n    } else {\n      setstateV(true);\n    }\n\n    var d1 = document.getElementsByName(\"validate\");\n    document.getElementById(\"tooltipForm\").classList.add(\"was-validated\");\n\n    for (var i = 0; i < d1.length; i++) {\n      d1[i].style.display = \"block\";\n    }\n  } //for change tooltip display propery\n\n\n  function changeHandeler(event, eleId) {\n    if (event.target.value !== \"\") document.getElementById(eleId).style.display = \"none\";else document.getElementById(eleId).style.display = \"block\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: \"Form\",\n        breadcrumbItem: \"Form Validation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xl: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: \"React Validation - Normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: \"Provide valuable, actionable feedback to your users with HTML5 form validation\\u2013available in all our supported browsers.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n                className: \"needs-validation\",\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom01\",\n                        children: \"First name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 101,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"firstname\",\n                        placeholder: \"First name\",\n                        type: \"text\",\n                        errorMessage: \"Enter First Name\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom01\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 102,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom02\",\n                        children: \"Last name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 115,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"lastname\",\n                        placeholder: \"Last name\",\n                        type: \"text\",\n                        errorMessage: \"Enter Last name\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom02\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 116,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom03\",\n                        children: \"City\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 131,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"city\",\n                        placeholder: \"City\",\n                        type: \"text\",\n                        errorMessage: \" Please provide a valid city.\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom03\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom04\",\n                        children: \"State\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"state\",\n                        placeholder: \"State\",\n                        type: \"text\",\n                        errorMessage: \"Please provide a valid state.\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom04\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 146,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationCustom05\",\n                        children: \"Zip\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 159,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                        name: \"zip\",\n                        placeholder: \"Zip Code\",\n                        type: \"text\",\n                        errorMessage: \" Please provide a valid zip.\",\n                        className: \"form-control\",\n                        validate: {\n                          required: {\n                            value: true\n                          }\n                        },\n                        id: \"validationCustom05\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-check mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"form-check-input\",\n                    type: \"checkbox\",\n                    value: \"\",\n                    id: \"invalidCheck\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 23\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"form-check-label\",\n                    htmlFor: \"invalidCheck\",\n                    children: \"Agree to terms and conditions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"invalid-feedback\",\n                    children: \"You must agree before submitting.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  type: \"submit\",\n                  children: \"Submit form\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"card-title\",\n                children: \"Bootstrap Validation (Tooltips)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-title-desc\",\n                children: [\"If your form layout allows it, you can swap the\", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: [\".\", \"{valid | invalid-}\", \"feedback\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this), \" classes for\", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: [\".\", \"{valid | invalid-}\", \"-tooltip\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this), \" classes to display validation feedback in a styled tooltip.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                className: \"needs-validation\",\n                method: \"post\",\n                id: \"tooltipForm\",\n                onSubmit: e => {\n                  handleSubmit(e);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3 position-relative\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationTooltip01\",\n                        children: \"First name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        className: \"form-control\",\n                        id: \"validationTooltip01\",\n                        placeholder: \"First name\",\n                        onChange: event => changeHandeler(event, \"validate1\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: fnm === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                        name: \"validate\",\n                        id: \"validate1\",\n                        children: fnm === true ? \"Looks good!\" : \"Please Enter Valid First Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3 position-relative\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationTooltip02\",\n                        children: \"Last name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        className: \"form-control\",\n                        id: \"validationTooltip02\",\n                        placeholder: \"Last name\",\n                        onChange: event => changeHandeler(event, \"validate2\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: lnm === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                        name: \"validate\",\n                        id: \"validate2\",\n                        children: lnm === true ? \"Looks good!\" : \"Please Enter Valid Last Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3 position-relative\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationTooltipUsername\",\n                        children: \"Username\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"input-group\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"input-group-prepend\",\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"input-group-text\",\n                            id: \"validationTooltipUsernamePrepend\",\n                            children: \"@\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 271,\n                            columnNumber: 31\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 270,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(Input, {\n                          type: \"text\",\n                          className: \"form-control\",\n                          id: \"validationTooltipUsername\",\n                          placeholder: \"Username\",\n                          onChange: event => changeHandeler(event, \"validate3\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 278,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: unm === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                          name: \"validate\",\n                          id: \"validate3\",\n                          children: unm === true ? \"Looks good!\" : \"Please choose a unique and valid username.\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 287,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 269,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3 position-relative\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationTooltip03\",\n                        children: \"City\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 307,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        className: \"form-control\",\n                        id: \"validationTooltip03\",\n                        placeholder: \"City\",\n                        onChange: event => changeHandeler(event, \"validate4\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 308,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: city === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                        name: \"validate\",\n                        id: \"validate4\",\n                        children: city === true ? \"Looks good!\" : \"Please choose a unique and valid username.Please provide a valid city.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"mb-3 position-relative\",\n                      children: [/*#__PURE__*/_jsxDEV(Label, {\n                        htmlFor: \"validationTooltip04\",\n                        children: \"State\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 334,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        className: \"form-control\",\n                        id: \"validationTooltip04\",\n                        placeholder: \"State\",\n                        onChange: event => changeHandeler(event, \"validate5\")\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: stateV === true ? \"valid-tooltip\" : \"invalid-tooltip\",\n                        name: \"validate\",\n                        id: \"validate5\",\n                        children: stateV === true ? \"Looks good!\" : \"Please provide a valid state.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 344,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  type: \"submit\",\n                  children: \"Submit form\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                children: \"Validation type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                className: \"mb-3\",\n                children: \"Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n                children: [/*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"username\",\n                  label: \"Required  \",\n                  placeholder: \"Type Something\",\n                  type: \"text\",\n                  errorMessage: \"Enter Name\",\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Label, {\n                  children: \"Equal To\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  name: \"password\",\n                  type: \"password\",\n                  placeholder: \"Password\",\n                  errorMessage: \"Enter password\",\n                  validate: {\n                    required: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mt-2 mb-3\",\n                  name: \"password1\",\n                  type: \"password\",\n                  placeholder: \"Re-type Password\",\n                  errorMessage: \"Enter Re-password\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    match: {\n                      value: \"password\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"email\",\n                  label: \"E-Mail  \",\n                  placeholder: \"Enter Valid Email\",\n                  type: \"email\",\n                  errorMessage: \"Invalid Email\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    email: {\n                      value: true\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"digits\",\n                  label: \"Digits  \",\n                  placeholder: \"Enter Only Digits\",\n                  type: \"number\",\n                  errorMessage: \"Enter Only Digits\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    pattern: {\n                      value: \"^[0-9]+$\",\n                      errorMessage: \"Only Digits\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"number\",\n                  label: \"Number  \",\n                  placeholder: \"Enter Only number\",\n                  type: \"number\",\n                  errorMessage: \"Enter Only Number\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    pattern: {\n                      value: \"^[0-9]+$\",\n                      errorMessage: \"Only Numbers\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"alphanumeric\",\n                  label: \"Alphanumeric  \",\n                  placeholder: \"Enter Only alphanumeric value\",\n                  type: \"text\",\n                  errorMessage: \"Enter Only Alphanumeric\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    pattern: {\n                      value: \"^[0-9a-zA-Z]+$\",\n                      errorMessage: \"Only Alphanumeric\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  type: \"textarea\",\n                  label: \"Textarea \",\n                  rows: \"5\",\n                  name: \"address\",\n                  id: \"address\",\n                  placeholder: \"Address\",\n                  errorMessage: \"This value is required.\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    pattern: {\n                      value: \"^[0-9a-zA-Z]+$\",\n                      errorMessage: \"Only Alphanumeric\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"mb-0\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      color: \"primary\",\n                      className: \"ms-1\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 25\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"reset\",\n                      color: \"secondary\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                children: \"Range validation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                className: \"mb-3\",\n                children: \"Parsley is a availity reactstrap validation. It helps you provide your users with feedback on their form submission before sending it to your server.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(AvForm, {\n                children: [/*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Min_Length\",\n                  label: \"Min Length  \",\n                  placeholder: \"Min 6 chars\",\n                  type: \"number\",\n                  errorMessage: \"Min 6 chars.\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    minLength: {\n                      value: 6,\n                      errorMessage: \"Min 6 chars.\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Max_Length\",\n                  label: \"Max Length  \",\n                  placeholder: \"Max 6 chars\",\n                  type: \"number\",\n                  errorMessage: \"Max 6 chars.\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    maxLength: {\n                      value: 6,\n                      errorMessage: \"Max 6 chars.\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Range_Length\",\n                  label: \"Range Length\",\n                  placeholder: \"Text between 5 - 10 chars length\",\n                  type: \"number\",\n                  errorMessage: \"range between 5 to 10\",\n                  validate: {\n                    pattern: {\n                      value: '^[5,10]'\n                    },\n                    required: {\n                      value: true\n                    },\n                    minLength: {\n                      value: 5\n                    },\n                    maxLength: {\n                      value: 10\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Min_Value\",\n                  label: \"Min Value  \",\n                  placeholder: \"Min 6 Chars\",\n                  min: 6,\n                  type: \"number\",\n                  errorMessage: \"Min Value 6\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    min: {\n                      value: 6\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Max_Value\",\n                  label: \"Max Value  \",\n                  placeholder: \"max 5 Chars\",\n                  max: 6,\n                  type: \"number\",\n                  errorMessage: \"Max Value 6\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    max: {\n                      value: 6\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Range_Value\",\n                  label: \"Range Value\",\n                  placeholder: \"Number between 6 - 100\",\n                  type: \"number\",\n                  errorMessage: \"range between 6 - 100\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    minLength: {\n                      value: 6\n                    },\n                    maxLength: {\n                      value: 100\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(AvField, {\n                  className: \"mb-3\",\n                  name: \"Regular_Exp\",\n                  label: \"Regular Exp  \",\n                  placeholder: \"Hex. Color\",\n                  type: \"number\",\n                  errorMessage: \"Hex Value\",\n                  validate: {\n                    required: {\n                      value: true\n                    },\n                    pattern: {\n                      value: \"^[#0-9]+$\",\n                      errorMessage: \"Only Hex Value\"\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 586,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: \"mb-0\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      color: \"primary\",\n                      className: \"ms-1\",\n                      children: \"Submit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 603,\n                      columnNumber: 25\n                    }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"reset\",\n                      color: \"secondary\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 606,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormValidations, \"fpY+BgW3dPzGUWxPymsWLv1PfMA=\");\n\n_c = FormValidations;\nexport default FormValidations;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormValidations\");","map":{"version":3,"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/src/pages/Forms/FormValidations.js"],"names":["React","useState","Row","Col","Card","CardBody","FormGroup","Button","CardTitle","CardSubtitle","Label","Input","AvForm","AvField","Breadcrumbs","FormValidations","fnm","setfnm","lnm","setlnm","unm","setunm","city","setcity","stateV","setstateV","handleSubmit","e","preventDefault","document","getElementById","value","d1","getElementsByName","classList","add","i","length","style","display","changeHandeler","event","eleId","target","required","match","email","pattern","errorMessage","minLength","maxLength","min","max"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\n\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  FormGroup,\n  Button,\n  CardTitle,\n  CardSubtitle,\n  Label,\n  Input\n} from \"reactstrap\"\nimport { AvForm, AvField } from \"availity-reactstrap-validation\"\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\n\nconst FormValidations = () => {\n  const [fnm, setfnm] = useState(false)\n  const [lnm, setlnm] = useState(false)\n  const [unm, setunm] = useState(false)\n  const [city, setcity] = useState(false)\n  const [stateV, setstateV] = useState(false)\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    var fnm = document.getElementById(\"validationTooltip01\").value\n    var lnm = document.getElementById(\"validationTooltip02\").value\n    var unm = document.getElementById(\"validationTooltipUsername\").value\n    var city = document.getElementById(\"validationTooltip03\").value\n    var stateV = document.getElementById(\"validationTooltip04\").value\n\n    if (fnm === \"\") {\n      setfnm(false)\n    } else {\n      setfnm(true)\n    }\n\n    if (lnm === \"\") {\n      setlnm(false)\n    } else {\n      setlnm(true)\n    }\n\n    if (unm === \"\") {\n      setunm(false)\n    } else {\n      setunm(true)\n    }\n\n    if (city === \"\") {\n      setcity(false)\n    } else {\n      setcity(true)\n    }\n\n    if (stateV === \"\") {\n      setstateV(false)\n    } else {\n      setstateV(true)\n    }\n\n    var d1 = document.getElementsByName(\"validate\")\n\n    document.getElementById(\"tooltipForm\").classList.add(\"was-validated\")\n\n    for (var i = 0; i < d1.length; i++) {\n      d1[i].style.display = \"block\"\n    }\n  }\n\n  //for change tooltip display propery\n  function changeHandeler(event, eleId) {\n    if (event.target.value !== \"\")\n      document.getElementById(eleId).style.display = \"none\"\n    else document.getElementById(eleId).style.display = \"block\"\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n        \n          <Breadcrumbs title=\"Form\" breadcrumbItem=\"Form Validation\" />\n          <Row>\n            <Col xl=\"6\">\n              <Card>\n                <CardBody>\n                  <h4 className=\"card-title\">React Validation - Normal</h4>\n                  <p className=\"card-title-desc\">\n                    Provide valuable, actionable feedback to your users with\n                    HTML5 form validation–available in all our supported\n                    browsers.\n                  </p>\n                  <AvForm className=\"needs-validation\">\n                    <Row>\n                      <Col md=\"6\">\n                        <div className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom01\">First name</Label>\n                          <AvField\n                            name=\"firstname\"\n                            placeholder=\"First name\"\n                            type=\"text\"\n                            errorMessage=\"Enter First Name\"\n                            className=\"form-control\"\n                            validate={{ required: { value: true } }}\n                            id=\"validationCustom01\"\n                          />\n                        </div>\n                      </Col>\n                      <Col md=\"6\">\n                        <div className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom02\">Last name</Label>\n                          <AvField\n                            name=\"lastname\"\n                            placeholder=\"Last name\"\n                            type=\"text\"\n                            errorMessage=\"Enter Last name\"\n                            className=\"form-control\"\n                            validate={{ required: { value: true } }}\n                            id=\"validationCustom02\"\n                          />\n                        </div>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"4\">\n                        <div className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom03\">City</Label>\n                          <AvField\n                            name=\"city\"\n                            placeholder=\"City\"\n                            type=\"text\"\n                            errorMessage=\" Please provide a valid city.\"\n                            className=\"form-control\"\n                            validate={{ required: { value: true } }}\n                            id=\"validationCustom03\"\n                          />\n                        </div>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom04\">State</Label>\n                          <AvField\n                            name=\"state\"\n                            placeholder=\"State\"\n                            type=\"text\"\n                            errorMessage=\"Please provide a valid state.\"\n                            className=\"form-control\"\n                            validate={{ required: { value: true } }}\n                            id=\"validationCustom04\"\n                          />\n                        </div>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-3\">\n                          <Label htmlFor=\"validationCustom05\">Zip</Label>\n                          <AvField\n                            name=\"zip\"\n                            placeholder=\"Zip Code\"\n                            type=\"text\"\n                            errorMessage=\" Please provide a valid zip.\"\n                            className=\"form-control\"\n                            validate={{ required: { value: true } }}\n                            id=\"validationCustom05\"\n                          />\n                        </div>\n                      </Col>\n                    </Row>\n                    <div className=\"form-check mb-3\">\n                      <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\"\n                        required />{\" \"}\n                      <label className=\"form-check-label\" htmlFor=\"invalidCheck\">\n                        Agree to terms and conditions\n                                        </label>\n                      <div className=\"invalid-feedback\">\n                        You must agree before submitting.\n                                        </div>\n                    </div>\n                    <Button color=\"primary\" type=\"submit\">\n                      Submit form\n                    </Button>\n                  </AvForm>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col xl=\"6\">\n              <Card>\n                <CardBody>\n                  <h4 className=\"card-title\">\n                    Bootstrap Validation (Tooltips)\n                  </h4>\n                  <p className=\"card-title-desc\">\n                    If your form layout allows it, you can swap the\n                    <code>.{\"{valid | invalid-}\"}feedback</code> classes for\n                    <code>.{\"{valid | invalid-}\"}-tooltip</code> classes to display validation feedback in a\n                    styled tooltip.\n                  </p>\n                  <form\n                    className=\"needs-validation\"\n                    method=\"post\"\n                    id=\"tooltipForm\"\n                    onSubmit={e => {\n                      handleSubmit(e)\n                    }}\n                  >\n                    <Row>\n                      <Col md=\"4\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltip01\">\n                            First name\n                          </Label>\n                          <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationTooltip01\"\n                            placeholder=\"First name\"\n                            onChange={event =>\n                              changeHandeler(event, \"validate1\")\n                            }\n                          />\n\n                          <div\n                            className={\n                              fnm === true ? \"valid-tooltip\" : \"invalid-tooltip\"\n                            }\n                            name=\"validate\"\n                            id=\"validate1\"\n                          >\n                            {fnm === true\n                              ? \"Looks good!\"\n                              : \"Please Enter Valid First Name\"}\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltip02\">Last name</Label>\n                          <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationTooltip02\"\n                            placeholder=\"Last name\"\n                            onChange={event =>\n                              changeHandeler(event, \"validate2\")\n                            }\n                          />\n                          <div\n                            className={\n                              lnm === true ? \"valid-tooltip\" : \"invalid-tooltip\"\n                            }\n                            name=\"validate\"\n                            id=\"validate2\"\n                          >\n                            {lnm === true\n                              ? \"Looks good!\"\n                              : \"Please Enter Valid Last Name\"}\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md=\"4\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltipUsername\">\n                            Username\n                          </Label>\n                          <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                              <span\n                                className=\"input-group-text\"\n                                id=\"validationTooltipUsernamePrepend\"\n                              >\n                                @\n                              </span>\n                            </div>\n                            <Input\n                              type=\"text\"\n                              className=\"form-control\"\n                              id=\"validationTooltipUsername\"\n                              placeholder=\"Username\"\n                              onChange={event =>\n                                changeHandeler(event, \"validate3\")\n                              }\n                            />\n                            <div\n                              className={\n                                unm === true\n                                  ? \"valid-tooltip\"\n                                  : \"invalid-tooltip\"\n                              }\n                              name=\"validate\"\n                              id=\"validate3\"\n                            >\n                              {unm === true\n                                ? \"Looks good!\"\n                                : \"Please choose a unique and valid username.\"}\n                            </div>\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md=\"6\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltip03\">City</Label>\n                          <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationTooltip03\"\n                            placeholder=\"City\"\n                            onChange={event =>\n                              changeHandeler(event, \"validate4\")\n                            }\n                          />\n                          <div\n                            className={\n                              city === true\n                                ? \"valid-tooltip\"\n                                : \"invalid-tooltip\"\n                            }\n                            name=\"validate\"\n                            id=\"validate4\"\n                          >\n                            {city === true\n                              ? \"Looks good!\"\n                              : \"Please choose a unique and valid username.Please provide a valid city.\"}\n                          </div>\n                        </div>\n                      </Col>\n                      <Col md=\"6\">\n                        <div className=\"mb-3 position-relative\">\n                          <Label htmlFor=\"validationTooltip04\">State</Label>\n                          <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"validationTooltip04\"\n                            placeholder=\"State\"\n                            onChange={event =>\n                              changeHandeler(event, \"validate5\")\n                            }\n                          />\n                          <div\n                            className={\n                              stateV === true\n                                ? \"valid-tooltip\"\n                                : \"invalid-tooltip\"\n                            }\n                            name=\"validate\"\n                            id=\"validate5\"\n                          >\n                            {stateV === true\n                              ? \"Looks good!\"\n                              : \"Please provide a valid state.\"}\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n                    <Button color=\"primary\" type=\"submit\">\n                      Submit form\n                    </Button>\n                  </form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={6}>\n              <Card>\n                <CardBody>\n                  <CardTitle>Validation type</CardTitle>\n                  <CardSubtitle className=\"mb-3\">\n                    Parsley is a availity reactstrap validation. It helps you\n                    provide your users with feedback on their form submission\n                    before sending it to your server.\n                  </CardSubtitle>\n\n                  <AvForm>\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"username\"\n                      label=\"Required  \"\n                      placeholder=\"Type Something\"\n                      type=\"text\"\n                      errorMessage=\"Enter Name\"\n                      validate={{ required: { value: true } }}\n                    />\n                    <Label>Equal To</Label>\n                    <AvField\n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      errorMessage=\"Enter password\"\n                      validate={{ required: { value: true } }}\n                    />\n                    <AvField\n                      className=\"mt-2 mb-3\"\n                      name=\"password1\"\n                      type=\"password\"\n                      placeholder=\"Re-type Password\"\n                      errorMessage=\"Enter Re-password\"\n                      validate={{\n                        required: { value: true },\n                        match: { value: \"password\" },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"email\"\n                      label=\"E-Mail  \"\n                      placeholder=\"Enter Valid Email\"\n                      type=\"email\"\n                      errorMessage=\"Invalid Email\"\n                      validate={{\n                        required: { value: true },\n                        email: { value: true },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"digits\"\n                      label=\"Digits  \"\n                      placeholder=\"Enter Only Digits\"\n                      type=\"number\"\n                      errorMessage=\"Enter Only Digits\"\n                      validate={{\n                        required: { value: true },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Only Digits\",\n                        },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"number\"\n                      label=\"Number  \"\n                      placeholder=\"Enter Only number\"\n                      type=\"number\"\n                      errorMessage=\"Enter Only Number\"\n                      validate={{\n                        required: { value: true },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Only Numbers\",\n                        },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"alphanumeric\"\n                      label=\"Alphanumeric  \"\n                      placeholder=\"Enter Only alphanumeric value\"\n                      type=\"text\"\n                      errorMessage=\"Enter Only Alphanumeric\"\n                      validate={{\n                        required: { value: true },\n                        pattern: {\n                          value: \"^[0-9a-zA-Z]+$\",\n                          errorMessage: \"Only Alphanumeric\",\n                        },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      type=\"textarea\"\n                      label=\"Textarea \"\n                      rows=\"5\"\n                      name=\"address\"\n                      id=\"address\"\n                      placeholder=\"Address\"\n                      errorMessage=\"This value is required.\"\n                      validate={{\n                        required: { value: true },\n                        pattern: {\n                          value: \"^[0-9a-zA-Z]+$\",\n                          errorMessage: \"Only Alphanumeric\",\n                        },\n                      }}\n                    />\n                    <FormGroup className=\"mb-0\">\n                      <div>\n                        <Button type=\"submit\" color=\"primary\" className=\"ms-1\">\n                          Submit\n                        </Button>{\" \"}\n                        <Button type=\"reset\" color=\"secondary\">\n                          Cancel\n                        </Button>\n                      </div>\n                    </FormGroup>\n                  </AvForm>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col lg={6}>\n              <Card>\n                <CardBody>\n                  <CardTitle>Range validation</CardTitle>\n                  <CardSubtitle className=\"mb-3\">\n                    Parsley is a availity reactstrap validation. It helps you\n                    provide your users with feedback on their form submission\n                    before sending it to your server.\n                  </CardSubtitle>\n\n                  <AvForm>\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Min_Length\"\n                      label=\"Min Length  \"\n                      placeholder=\"Min 6 chars\"\n                      type=\"number\"\n                      errorMessage=\"Min 6 chars.\"\n                      validate={{\n                        required: { value: true },\n                        minLength: { value: 6, errorMessage: \"Min 6 chars.\" },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Max_Length\"\n                      label=\"Max Length  \"\n                      placeholder=\"Max 6 chars\"\n                      type=\"number\"\n                      errorMessage=\"Max 6 chars.\"\n                      validate={{\n                        required: { value: true },\n                        maxLength: { value: 6, errorMessage: \"Max 6 chars.\" },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Range_Length\"\n                      label=\"Range Length\"\n                      placeholder=\"Text between 5 - 10 chars length\"\n                      type=\"number\"\n                      errorMessage=\"range between 5 to 10\"\n                      \n                      validate={{\n                        pattern: {value: '^[5,10]'},\n                        required: { value: true },\n                        minLength: { value: 5 },\n                        maxLength: { value: 10 },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Min_Value\"\n                      label=\"Min Value  \"\n                      placeholder=\"Min 6 Chars\"\n                      min={6}\n                      type=\"number\"\n                      errorMessage=\"Min Value 6\"\n                      validate={{\n                        required: { value: true },\n                        min: { value: 6 },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Max_Value\"\n                      label=\"Max Value  \"\n                      placeholder=\"max 5 Chars\"\n                      max={6}\n                      type=\"number\"\n                      errorMessage=\"Max Value 6\"\n                      validate={{\n                        required: { value: true },\n                        max: { value: 6 },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Range_Value\"\n                      label=\"Range Value\"\n                      placeholder=\"Number between 6 - 100\"\n                      type=\"number\"\n                      errorMessage=\"range between 6 - 100\"\n                      validate={{\n                        required: { value: true },\n                        minLength: { value: 6 },\n                        maxLength: { value: 100 },\n                      }}\n                    />\n                    <AvField\n                      className=\"mb-3\"\n                      name=\"Regular_Exp\"\n                      label=\"Regular Exp  \"\n                      placeholder=\"Hex. Color\"\n                      type=\"number\"\n                      errorMessage=\"Hex Value\"\n                      validate={{\n                        required: { value: true },\n                        pattern: {\n                          value: \"^[#0-9]+$\",\n                          errorMessage: \"Only Hex Value\",\n                        },\n                      }}\n                    />\n                    <FormGroup className=\"mb-0\">\n                      <div>\n                        <Button type=\"submit\" color=\"primary\" className=\"ms-1\">\n                          Submit\n                        </Button>{\" \"}\n                        <Button type=\"reset\" color=\"secondary\">\n                          Cancel\n                        </Button>\n                      </div>\n                    </FormGroup>\n                  </AvForm>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        \n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default FormValidations\n"]},"metadata":{},"sourceType":"module"}