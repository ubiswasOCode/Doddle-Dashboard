{"ast":null,"code":"import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport translationGr from \"./locales/gr/translation.json\";\nimport translationIT from \"./locales/it/translation.json\";\nimport translationRS from \"./locales/rs/translation.json\";\nimport translationSP from \"./locales/sp/translation.json\";\nimport translationENG from \"./locales/eng/translation.json\";\n\n// the translations\nconst resources = {\n  gr: {\n    translation: translationGr\n  },\n  it: {\n    translation: translationIT\n  },\n  rs: {\n    translation: translationRS\n  },\n  sp: {\n    translation: translationSP\n  },\n  eng: {\n    translation: translationENG\n  }\n};\nconst language = localStorage.getItem(\"I18N_LANGUAGE\");\nif (!language) {\n  localStorage.setItem(\"I18N_LANGUAGE\", \"en\");\n}\ni18n.use(detector).use(initReactI18next) // passes i18n down to react-i18next\n.init({\n  resources,\n  lng: localStorage.getItem(\"I18N_LANGUAGE\") || \"en\",\n  fallbackLng: \"en\",\n  // use en if detected lng is not available\n\n  keySeparator: false,\n  // we do not use keys in form messages.welcome\n\n  interpolation: {\n    escapeValue: false // react already safes from xss\n  }\n});\n\nexport default i18n;","map":{"version":3,"names":["i18n","detector","initReactI18next","translationGr","translationIT","translationRS","translationSP","translationENG","resources","gr","translation","it","rs","sp","eng","language","localStorage","getItem","setItem","use","init","lng","fallbackLng","keySeparator","interpolation","escapeValue"],"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/src/i18n.js"],"sourcesContent":["import i18n from \"i18next\"\nimport detector from \"i18next-browser-languagedetector\"\nimport { initReactI18next } from \"react-i18next\"\n\nimport translationGr from \"./locales/gr/translation.json\"\nimport translationIT from \"./locales/it/translation.json\"\nimport translationRS from \"./locales/rs/translation.json\"\nimport translationSP from \"./locales/sp/translation.json\"\nimport translationENG from \"./locales/eng/translation.json\"\n\n// the translations\nconst resources = {\n  gr: {\n    translation: translationGr,\n  },\n  it: {\n    translation: translationIT,\n  },\n  rs: {\n    translation: translationRS,\n  },\n  sp: {\n    translation: translationSP,\n  },\n  eng: {\n    translation: translationENG,\n  },\n}\n\nconst language = localStorage.getItem(\"I18N_LANGUAGE\")\nif (!language) {\n  localStorage.setItem(\"I18N_LANGUAGE\", \"en\")\n}\n\ni18n\n  .use(detector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: localStorage.getItem(\"I18N_LANGUAGE\") || \"en\",\n    fallbackLng: \"en\", // use en if detected lng is not available\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  })\n\nexport default i18n\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,SAASC,gBAAgB,QAAQ,eAAe;AAEhD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,cAAc,MAAM,gCAAgC;;AAE3D;AACA,MAAMC,SAAS,GAAG;EAChBC,EAAE,EAAE;IACFC,WAAW,EAAEP;EACf,CAAC;EACDQ,EAAE,EAAE;IACFD,WAAW,EAAEN;EACf,CAAC;EACDQ,EAAE,EAAE;IACFF,WAAW,EAAEL;EACf,CAAC;EACDQ,EAAE,EAAE;IACFH,WAAW,EAAEJ;EACf,CAAC;EACDQ,GAAG,EAAE;IACHJ,WAAW,EAAEH;EACf;AACF,CAAC;AAED,MAAMQ,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;AACtD,IAAI,CAACF,QAAQ,EAAE;EACbC,YAAY,CAACE,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC;AAC7C;AAEAlB,IAAI,CACDmB,GAAG,CAAClB,QAAQ,CAAC,CACbkB,GAAG,CAACjB,gBAAgB,CAAC,CAAC;AAAA,CACtBkB,IAAI,CAAC;EACJZ,SAAS;EACTa,GAAG,EAAEL,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,IAAI;EAClDK,WAAW,EAAE,IAAI;EAAE;;EAEnBC,YAAY,EAAE,KAAK;EAAE;;EAErBC,aAAa,EAAE;IACbC,WAAW,EAAE,KAAK,CAAE;EACtB;AACF,CAAC,CAAC;;AAEJ,eAAezB,IAAI"},"metadata":{},"sourceType":"module"}