{"ast":null,"code":"import axios from \"axios\";\nimport { post, del, get, put } from \"./api_helper\";\nimport * as url from \"./url_helper\";\n\n// Gets the logged in user data from local session\nconst getLoggedInUser = () => {\n  const user = localStorage.getItem(\"user\");\n  if (user) return JSON.parse(user);\n  return null;\n};\n\n//is user is logged in\nconst isUserAuthenticated = () => {\n  return getLoggedInUser() !== null;\n};\n\n// Register Method\nconst postFakeRegister = data => post(url.POST_FAKE_REGISTER, data);\n\n// Login Method\nconst postFakeLogin = data => post(url.POST_FAKE_LOGIN, data);\n\n// postForgetPwd\nconst postFakeForgetPwd = data => post(url.POST_FAKE_PASSWORD_FORGET, data);\n\n// Edit profile\nconst postJwtProfile = data => post(url.POST_EDIT_JWT_PROFILE, data);\nconst postFakeProfile = data => post(url.POST_EDIT_PROFILE, data);\n\n// Register Method\nconst postJwtRegister = (url, data) => {\n  return axios.post(url, data).then(response => {\n    if (response.status >= 200 || response.status <= 299) return response.data;\n    throw response.data;\n  }).catch(err => {\n    let message;\n    if (err.response && err.response.status) {\n      switch (err.response.status) {\n        case 404:\n          message = \"Sorry! the page you are looking for could not be found\";\n          break;\n        case 500:\n          message = \"Sorry! something went wrong, please contact our support team\";\n          break;\n        case 401:\n          message = \"Invalid credentials\";\n          break;\n        default:\n          message = err[1];\n          break;\n      }\n    }\n    throw message;\n  });\n};\n\n// Login Method\nconst postJwtLogin = data => post(url.POST_FAKE_JWT_LOGIN, data);\n\n// postForgetPwd\nconst postJwtForgetPwd = data => post(url.POST_FAKE_JWT_PASSWORD_FORGET, data);\n\n// postSocialLogin\nexport const postSocialLogin = data => post(url.SOCIAL_LOGIN, data);\n\n// get Products\nexport const getProducts = () => get(url.GET_PRODUCTS);\n\n// get Product detail\nexport const getProductDetail = id => get(`${url.GET_PRODUCTS_DETAIL}/${id}`, {\n  params: {\n    id\n  }\n});\n\n// get Events\nexport const getEvents = () => get(url.GET_EVENTS);\n\n// add Events\nexport const addNewEvent = event => post(url.ADD_NEW_EVENT, event);\n\n// update Event\nexport const updateEvent = event => put(url.UPDATE_EVENT, event);\n\n// delete Event\nexport const deleteEvent = event => del(url.DELETE_EVENT, {\n  headers: {\n    event\n  }\n});\n\n// get Categories\nexport const getCategories = () => get(url.GET_CATEGORIES);\n\n// get chats\nexport const getChats = () => get(url.GET_CHATS);\n\n// get groups\nexport const getGroups = () => get(url.GET_GROUPS);\n\n// get Contacts\nexport const getContacts = () => get(url.GET_CONTACTS);\n\n// get messages\nexport const getMessages = function () {\n  let roomId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return get(`${url.GET_MESSAGES}/${roomId}`, {\n    params: {\n      roomId\n    }\n  });\n};\n\n// post messages\nexport const addMessage = message => post(url.ADD_MESSAGE, message);\n\n// get project\nexport const getProjects = () => get(url.GET_PROJECTS);\n\n// get project details\nexport const getProjectsDetails = id => get(`${url.GET_PROJECT_DETAIL}/${id}`, {\n  params: {\n    id\n  }\n});\n\n// get tasks\nexport const getTasks = () => get(url.GET_TASKS);\n\n// get contacts\nexport const getUsers = () => get(url.GET_USERS);\nexport const getUserProfile = () => get(url.GET_USER_PROFILE);\nexport { getLoggedInUser, isUserAuthenticated, postFakeRegister, postFakeLogin, postFakeProfile, postFakeForgetPwd, postJwtRegister, postJwtLogin, postJwtForgetPwd, postJwtProfile };","map":{"version":3,"names":["axios","post","del","get","put","url","getLoggedInUser","user","localStorage","getItem","JSON","parse","isUserAuthenticated","postFakeRegister","data","POST_FAKE_REGISTER","postFakeLogin","POST_FAKE_LOGIN","postFakeForgetPwd","POST_FAKE_PASSWORD_FORGET","postJwtProfile","POST_EDIT_JWT_PROFILE","postFakeProfile","POST_EDIT_PROFILE","postJwtRegister","then","response","status","catch","err","message","postJwtLogin","POST_FAKE_JWT_LOGIN","postJwtForgetPwd","POST_FAKE_JWT_PASSWORD_FORGET","postSocialLogin","SOCIAL_LOGIN","getProducts","GET_PRODUCTS","getProductDetail","id","GET_PRODUCTS_DETAIL","params","getEvents","GET_EVENTS","addNewEvent","event","ADD_NEW_EVENT","updateEvent","UPDATE_EVENT","deleteEvent","DELETE_EVENT","headers","getCategories","GET_CATEGORIES","getChats","GET_CHATS","getGroups","GET_GROUPS","getContacts","GET_CONTACTS","getMessages","roomId","arguments","length","undefined","GET_MESSAGES","addMessage","ADD_MESSAGE","getProjects","GET_PROJECTS","getProjectsDetails","GET_PROJECT_DETAIL","getTasks","GET_TASKS","getUsers","GET_USERS","getUserProfile","GET_USER_PROFILE"],"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/src/helpers/fakebackend_helper.js"],"sourcesContent":["import axios from \"axios\"\nimport { post, del, get, put } from \"./api_helper\"\nimport * as url from \"./url_helper\"\n\n// Gets the logged in user data from local session\nconst getLoggedInUser = () => {\n  const user = localStorage.getItem(\"user\")\n  if (user) return JSON.parse(user)\n  return null\n}\n\n//is user is logged in\nconst isUserAuthenticated = () => {\n  return getLoggedInUser() !== null\n}\n\n// Register Method\nconst postFakeRegister = (data) => post(url.POST_FAKE_REGISTER, data)\n\n// Login Method\nconst postFakeLogin = data => post(url.POST_FAKE_LOGIN, data)\n\n// postForgetPwd\nconst postFakeForgetPwd = data => post(url.POST_FAKE_PASSWORD_FORGET, data)\n\n// Edit profile\nconst postJwtProfile = data => post(url.POST_EDIT_JWT_PROFILE, data)\n\nconst postFakeProfile = data => post(url.POST_EDIT_PROFILE, data)\n\n// Register Method\nconst postJwtRegister = (url, data) => {\n  return axios\n    .post(url, data)\n    .then(response => {\n      if (response.status >= 200 || response.status <= 299) return response.data\n      throw response.data\n    })\n    .catch(err => {\n      let message\n      if (err.response && err.response.status) {\n        switch (err.response.status) {\n          case 404:\n            message = \"Sorry! the page you are looking for could not be found\"\n            break\n          case 500:\n            message =\n              \"Sorry! something went wrong, please contact our support team\"\n            break\n          case 401:\n            message = \"Invalid credentials\"\n            break\n          default:\n            message = err[1]\n            break\n        }\n      }\n      throw message\n    })\n}\n\n// Login Method\nconst postJwtLogin = data => post(url.POST_FAKE_JWT_LOGIN, data)\n\n// postForgetPwd\nconst postJwtForgetPwd = data => post(url.POST_FAKE_JWT_PASSWORD_FORGET, data)\n\n// postSocialLogin\nexport const postSocialLogin = data => post(url.SOCIAL_LOGIN, data)\n\n// get Products\nexport const getProducts = () => get(url.GET_PRODUCTS)\n\n// get Product detail\nexport const getProductDetail = id =>\n  get(`${url.GET_PRODUCTS_DETAIL}/${id}`, { params: { id } })\n\n// get Events\nexport const getEvents = () => get(url.GET_EVENTS)\n\n// add Events\nexport const addNewEvent = event => post(url.ADD_NEW_EVENT, event)\n\n// update Event\nexport const updateEvent = event => put(url.UPDATE_EVENT, event)\n\n// delete Event\nexport const deleteEvent = event =>\n  del(url.DELETE_EVENT, { headers: { event } })\n\n// get Categories\nexport const getCategories = () => get(url.GET_CATEGORIES)\n\n// get chats\nexport const getChats = () => get(url.GET_CHATS)\n\n// get groups\nexport const getGroups = () => get(url.GET_GROUPS)\n\n// get Contacts\nexport const getContacts = () => get(url.GET_CONTACTS)\n\n// get messages\nexport const getMessages = (roomId = \"\") =>\n  get(`${url.GET_MESSAGES}/${roomId}`, { params: { roomId } })\n\n// post messages\nexport const addMessage = message => post(url.ADD_MESSAGE, message)\n\n// get project\nexport const getProjects = () => get(url.GET_PROJECTS)\n\n// get project details\nexport const getProjectsDetails = id =>\n  get(`${url.GET_PROJECT_DETAIL}/${id}`, { params: { id } })\n\n// get tasks\nexport const getTasks = () => get(url.GET_TASKS)\n\n// get contacts\nexport const getUsers = () => get(url.GET_USERS)\n\nexport const getUserProfile = () => get(url.GET_USER_PROFILE)\n\nexport {\n  getLoggedInUser,\n  isUserAuthenticated,\n  postFakeRegister,\n  postFakeLogin,\n  postFakeProfile,\n  postFakeForgetPwd,\n  postJwtRegister,\n  postJwtLogin,\n  postJwtForgetPwd,\n  postJwtProfile,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}