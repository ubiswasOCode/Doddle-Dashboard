{"ast":null,"code":"import _regeneratorRuntime from\"/home/ocode/Downloads/Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchTasks),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(tasksSaga);import{call,put,takeEvery}from\"redux-saga/effects\";// Crypto Redux States\nimport{GET_TASKS}from\"./actionTypes\";import{getTasksSuccess,getTasksFail}from\"./actions\";//Include Both Helper File with needed methods\nimport{getTasks}from\"../../helpers/fakebackend_helper\";function fetchTasks(){var response;return _regeneratorRuntime.wrap(function fetchTasks$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(getTasks);case 3:response=_context.sent;_context.next=6;return put(getTasksSuccess(response));case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);_context.next=12;return put(getTasksFail(_context.t0));case 12:case\"end\":return _context.stop();}}},_marked,null,[[0,8]]);}function tasksSaga(){return _regeneratorRuntime.wrap(function tasksSaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(GET_TASKS,fetchTasks);case 2:case\"end\":return _context2.stop();}}},_marked2);}export default tasksSaga;","map":{"version":3,"sources":["/home/ocode/Downloads/Admin/src/store/tasks/saga.js"],"names":["fetchTasks","tasksSaga","call","put","takeEvery","GET_TASKS","getTasksSuccess","getTasksFail","getTasks","response"],"mappings":"2LASUA,U,iDASAC,S,EAlBV,OAASC,IAAT,CAAeC,GAAf,CAAoBC,SAApB,KAAqC,oBAArC,CAEA;AACA,OAASC,SAAT,KAA0B,eAA1B,CACA,OAASC,eAAT,CAA0BC,YAA1B,KAA8C,WAA9C,CAEA;AACA,OAASC,QAAT,KAAyB,kCAAzB,CAEA,QAAUR,CAAAA,UAAV,mKAEqB,MAAME,CAAAA,IAAI,CAACM,QAAD,CAAV,CAFrB,OAEUC,QAFV,+BAGI,MAAMN,CAAAA,GAAG,CAACG,eAAe,CAACG,QAAD,CAAhB,CAAT,CAHJ,uGAKI,MAAMN,CAAAA,GAAG,CAACI,YAAY,aAAb,CAAT,CALJ,oEASA,QAAUN,CAAAA,SAAV,yIACE,MAAMG,CAAAA,SAAS,CAACC,SAAD,CAAYL,UAAZ,CAAf,CADF,wDAIA,cAAeC,CAAAA,SAAf","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Crypto Redux States\nimport { GET_TASKS } from \"./actionTypes\"\nimport { getTasksSuccess, getTasksFail } from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { getTasks } from \"../../helpers/fakebackend_helper\"\n\nfunction* fetchTasks() {\n  try {\n    const response = yield call(getTasks)\n    yield put(getTasksSuccess(response))\n  } catch (error) {\n    yield put(getTasksFail(error))\n  }\n}\n\nfunction* tasksSaga() {\n  yield takeEvery(GET_TASKS, fetchTasks)\n}\n\nexport default tasksSaga\n"]},"metadata":{},"sourceType":"module"}