{"ast":null,"code":"import { GET_EVENTS_SUCCESS, GET_EVENTS_FAIL, ADD_EVENT_SUCCESS, ADD_EVENT_FAIL, UPDATE_EVENT_SUCCESS, UPDATE_EVENT_FAIL, DELETE_EVENT_SUCCESS, DELETE_EVENT_FAIL, GET_CATEGORIES_SUCCESS, GET_CATEGORIES_FAIL } from \"./actionTypes\";\nconst INIT_STATE = {\n  events: [],\n  categories: [],\n  error: {}\n};\nconst Calendar = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_EVENTS_SUCCESS:\n      return {\n        ...state,\n        events: action.payload\n      };\n    case GET_EVENTS_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case ADD_EVENT_SUCCESS:\n      return {\n        ...state,\n        events: [...state.events, action.payload]\n      };\n    case ADD_EVENT_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case UPDATE_EVENT_SUCCESS:\n      return {\n        ...state,\n        events: state.events.map(event => event.id.toString() === action.payload.id.toString() ? {\n          event,\n          ...action.payload\n        } : event)\n      };\n    case UPDATE_EVENT_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case DELETE_EVENT_SUCCESS:\n      return {\n        ...state,\n        events: state.events.filter(event => event.id.toString() !== action.payload.id.toString())\n      };\n    case DELETE_EVENT_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case GET_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        categories: action.payload\n      };\n    case GET_CATEGORIES_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["GET_EVENTS_SUCCESS","GET_EVENTS_FAIL","ADD_EVENT_SUCCESS","ADD_EVENT_FAIL","UPDATE_EVENT_SUCCESS","UPDATE_EVENT_FAIL","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","INIT_STATE","events","categories","error","Calendar","state","arguments","length","undefined","action","type","payload","map","event","id","toString","filter","_c","$RefreshReg$"],"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/src/store/calendar/reducer.js"],"sourcesContent":["import {\n  GET_EVENTS_SUCCESS,\n  GET_EVENTS_FAIL,\n  ADD_EVENT_SUCCESS,\n  ADD_EVENT_FAIL,\n  UPDATE_EVENT_SUCCESS,\n  UPDATE_EVENT_FAIL,\n  DELETE_EVENT_SUCCESS,\n  DELETE_EVENT_FAIL,\n  GET_CATEGORIES_SUCCESS,\n  GET_CATEGORIES_FAIL,\n} from \"./actionTypes\"\n\nconst INIT_STATE = {\n  events: [],\n  categories: [],\n  error: {},\n}\n\nconst Calendar = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case GET_EVENTS_SUCCESS:\n      return {\n        ...state,\n        events: action.payload,\n      }\n\n    case GET_EVENTS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case ADD_EVENT_SUCCESS:\n      return {\n        ...state,\n        events: [...state.events, action.payload],\n      }\n\n    case ADD_EVENT_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case UPDATE_EVENT_SUCCESS:\n      return {\n        ...state,\n        events: state.events.map(event =>\n          event.id.toString() === action.payload.id.toString()\n            ? { event, ...action.payload }\n            : event\n        ),\n      }\n\n    case UPDATE_EVENT_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case DELETE_EVENT_SUCCESS:\n      return {\n        ...state,\n        events: state.events.filter(\n          event => event.id.toString() !== action.payload.id.toString()\n        ),\n      }\n\n    case DELETE_EVENT_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        categories: action.payload,\n      }\n\n    case GET_CATEGORIES_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport default Calendar\n"],"mappings":"AAAA,SACEA,kBAAkB,EAClBC,eAAe,EACfC,iBAAiB,EACjBC,cAAc,EACdC,oBAAoB,EACpBC,iBAAiB,EACjBC,oBAAoB,EACpBC,iBAAiB,EACjBC,sBAAsB,EACtBC,mBAAmB,QACd,eAAe;AAEtB,MAAMC,UAAU,GAAG;EACjBC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE,EAAE;EACdC,KAAK,EAAE,CAAC;AACV,CAAC;AAED,MAAMC,QAAQ,GAAG,SAAAA,CAAA,EAAgC;EAAA,IAA/BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,UAAU;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKpB,kBAAkB;MACrB,OAAO;QACL,GAAGe,KAAK;QACRJ,MAAM,EAAEQ,MAAM,CAACE;MACjB,CAAC;IAEH,KAAKpB,eAAe;MAClB,OAAO;QACL,GAAGc,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKnB,iBAAiB;MACpB,OAAO;QACL,GAAGa,KAAK;QACRJ,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACJ,MAAM,EAAEQ,MAAM,CAACE,OAAO;MAC1C,CAAC;IAEH,KAAKlB,cAAc;MACjB,OAAO;QACL,GAAGY,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKjB,oBAAoB;MACvB,OAAO;QACL,GAAGW,KAAK;QACRJ,MAAM,EAAEI,KAAK,CAACJ,MAAM,CAACW,GAAG,CAACC,KAAK,IAC5BA,KAAK,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC,KAAKN,MAAM,CAACE,OAAO,CAACG,EAAE,CAACC,QAAQ,CAAC,CAAC,GAChD;UAAEF,KAAK;UAAE,GAAGJ,MAAM,CAACE;QAAQ,CAAC,GAC5BE,KACN;MACF,CAAC;IAEH,KAAKlB,iBAAiB;MACpB,OAAO;QACL,GAAGU,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKf,oBAAoB;MACvB,OAAO;QACL,GAAGS,KAAK;QACRJ,MAAM,EAAEI,KAAK,CAACJ,MAAM,CAACe,MAAM,CACzBH,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC,KAAKN,MAAM,CAACE,OAAO,CAACG,EAAE,CAACC,QAAQ,CAAC,CAC9D;MACF,CAAC;IAEH,KAAKlB,iBAAiB;MACpB,OAAO;QACL,GAAGQ,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKb,sBAAsB;MACzB,OAAO;QACL,GAAGO,KAAK;QACRH,UAAU,EAAEO,MAAM,CAACE;MACrB,CAAC;IAEH,KAAKZ,mBAAmB;MACtB,OAAO;QACL,GAAGM,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACE;MAChB,CAAC;IACH;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAAAY,EAAA,GAtEKb,QAAQ;AAwEd,eAAeA,QAAQ;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}