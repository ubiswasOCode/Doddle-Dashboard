{"ast":null,"code":"import firebase from \"firebase/app\";\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nclass FirebaseAuthBackend {\n  constructor(firebaseConfig) {\n    this.registerUser = (email, password) => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(user => {\n          resolve(firebase.auth().currentUser);\n        }, error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n    this.editProfileAPI = (email, password) => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(user => {\n          resolve(firebase.auth().currentUser);\n        }, error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n    this.loginUser = (email, password) => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n          resolve(firebase.auth().currentUser);\n        }, error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n    this.forgetPassword = email => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().sendPasswordResetEmail(email, {\n          url: window.location.protocol + \"//\" + window.location.host + \"/login\"\n        }).then(() => {\n          resolve(true);\n        }).catch(error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n    this.logout = () => {\n      return new Promise((resolve, reject) => {\n        firebase.auth().signOut().then(() => {\n          resolve(true);\n        }).catch(error => {\n          reject(this._handleError(error));\n        });\n      });\n    };\n    this.addNewUserToFirestore = user => {\n      const collection = firebase.firestore().collection(\"users\");\n      const {\n        profile\n      } = user.additionalUserInfo;\n      const details = {\n        firstName: profile.given_name ? profile.given_name : profile.first_name,\n        lastName: profile.family_name ? profile.family_name : profile.last_name,\n        fullName: profile.name,\n        email: profile.email,\n        picture: profile.picture,\n        createdDtm: firebase.firestore.FieldValue.serverTimestamp(),\n        lastLoginTime: firebase.firestore.FieldValue.serverTimestamp()\n      };\n      collection.doc(firebase.auth().currentUser.uid).set(details);\n      return {\n        user,\n        details\n      };\n    };\n    this.setLoggeedInUser = user => {\n      localStorage.setItem(\"authUser\", JSON.stringify(user));\n    };\n    this.getAuthenticatedUser = () => {\n      if (!localStorage.getItem(\"authUser\")) return null;\n      return JSON.parse(localStorage.getItem(\"authUser\"));\n    };\n    if (firebaseConfig) {\n      // Initialize Firebase\n      firebase.initializeApp(firebaseConfig);\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          localStorage.setItem(\"authUser\", JSON.stringify(user));\n        } else {\n          localStorage.removeItem(\"authUser\");\n        }\n      });\n    }\n  }\n\n  /**\n   * Registers the user with given details\n   */\n\n  /**\n   * Registers the user with given details\n   */\n\n  /**\n   * Login user with given details\n   */\n\n  /**\n   * forget Password user with given details\n   */\n\n  /**\n   * Logout the user\n   */\n\n  /**\n   * Social Login user with given details\n   */\n  // socialLoginUser = (data, type) => {\n  //   let credential = {}\n  //   if (type === \"google\") {\n  //     credential = firebase.auth.GoogleAuthProvider.credential(data.idToken, data.token)\n  //   } else if (type === \"facebook\") {\n  //     credential = firebase.auth.FacebookAuthProvider.credential(data.token)\n  //   }\n  //   return new Promise((resolve, reject) => {\n  //     if (!credential) {\n  //       firebase.auth().signInWithCredential(credential)\n  //         .then(user => {\n  //           resolve(this.addNewUserToFirestore(user))\n  //         })\n  //         .catch(error => {\n  //           reject(this._handleError(error))\n  //         })\n  //     } else {\n  //       reject(this._handleError(error))\n  //     }\n  //   })\n  // }\n  /**\n   * Returns the authenticated user\n   */\n  /**\n   * Handle the error\n   * @param {*} error\n   */\n  _handleError(error) {\n    // var errorCode = error.code;\n    var errorMessage = error.message;\n    return errorMessage;\n  }\n}\nlet _fireBaseBackend = null;\n\n/**\n * Initilize the backend\n * @param {*} config\n */\nconst initFirebaseBackend = config => {\n  if (!_fireBaseBackend) {\n    _fireBaseBackend = new FirebaseAuthBackend(config);\n  }\n  return _fireBaseBackend;\n};\n\n/**\n * Returns the firebase backend\n */\nconst getFirebaseBackend = () => {\n  return _fireBaseBackend;\n};\nexport { initFirebaseBackend, getFirebaseBackend };","map":{"version":3,"names":["firebase","FirebaseAuthBackend","constructor","firebaseConfig","registerUser","email","password","Promise","resolve","reject","auth","createUserWithEmailAndPassword","then","user","currentUser","error","_handleError","editProfileAPI","loginUser","signInWithEmailAndPassword","forgetPassword","sendPasswordResetEmail","url","window","location","protocol","host","catch","logout","signOut","addNewUserToFirestore","collection","firestore","profile","additionalUserInfo","details","firstName","given_name","first_name","lastName","family_name","last_name","fullName","name","picture","createdDtm","FieldValue","serverTimestamp","lastLoginTime","doc","uid","set","setLoggeedInUser","localStorage","setItem","JSON","stringify","getAuthenticatedUser","getItem","parse","initializeApp","onAuthStateChanged","removeItem","errorMessage","message","_fireBaseBackend","initFirebaseBackend","config","getFirebaseBackend"],"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/src/helpers/firebase_helper.js"],"sourcesContent":["import firebase from \"firebase/app\"\n\n// Add the Firebase products that you want to use\nimport \"firebase/auth\"\nimport \"firebase/firestore\"\n\nclass FirebaseAuthBackend {\n  constructor(firebaseConfig) {\n    if (firebaseConfig) {\n      // Initialize Firebase\n      firebase.initializeApp(firebaseConfig)\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          localStorage.setItem(\"authUser\", JSON.stringify(user))\n        } else {\n          localStorage.removeItem(\"authUser\")\n        }\n      })\n    }\n  }\n\n  /**\n   * Registers the user with given details\n   */\n  registerUser = (email, password) => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(\n          user => {\n            resolve(firebase.auth().currentUser)\n          },\n          error => {\n            reject(this._handleError(error))\n          }\n        )\n    })\n  }\n\n  /**\n   * Registers the user with given details\n   */\n  editProfileAPI = (email, password) => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(\n          user => {\n            resolve(firebase.auth().currentUser)\n          },\n          error => {\n            reject(this._handleError(error))\n          }\n        )\n    })\n  }\n\n  /**\n   * Login user with given details\n   */\n  loginUser = (email, password) => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then(\n          user => {\n            resolve(firebase.auth().currentUser)\n          },\n          error => {\n            reject(this._handleError(error))\n          }\n        )\n    })\n  }\n\n  /**\n   * forget Password user with given details\n   */\n  forgetPassword = email => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .sendPasswordResetEmail(email, {\n          url:\n            window.location.protocol + \"//\" + window.location.host + \"/login\",\n        })\n        .then(() => {\n          resolve(true)\n        })\n        .catch(error => {\n          reject(this._handleError(error))\n        })\n    })\n  }\n\n  /**\n   * Logout the user\n   */\n  logout = () => {\n    return new Promise((resolve, reject) => {\n      firebase\n        .auth()\n        .signOut()\n        .then(() => {\n          resolve(true)\n        })\n        .catch(error => {\n          reject(this._handleError(error))\n        })\n    })\n  }\n\n  /**\n   * Social Login user with given details\n   */\n  // socialLoginUser = (data, type) => {\n  //   let credential = {}\n  //   if (type === \"google\") {\n  //     credential = firebase.auth.GoogleAuthProvider.credential(data.idToken, data.token)\n  //   } else if (type === \"facebook\") {\n  //     credential = firebase.auth.FacebookAuthProvider.credential(data.token)\n  //   }\n  //   return new Promise((resolve, reject) => {\n  //     if (!credential) {\n  //       firebase.auth().signInWithCredential(credential)\n  //         .then(user => {\n  //           resolve(this.addNewUserToFirestore(user))\n  //         })\n  //         .catch(error => {\n  //           reject(this._handleError(error))\n  //         })\n  //     } else {\n  //       reject(this._handleError(error))\n  //     }\n  //   })\n  // }\n\n  addNewUserToFirestore = (user) => {\n    const collection = firebase.firestore().collection(\"users\")\n    const { profile } = user.additionalUserInfo\n    const details = {\n      firstName: profile.given_name ? profile.given_name : profile.first_name,\n      lastName: profile.family_name ? profile.family_name : profile.last_name,\n      fullName: profile.name,\n      email: profile.email,\n      picture: profile.picture,\n      createdDtm: firebase.firestore.FieldValue.serverTimestamp(),\n      lastLoginTime: firebase.firestore.FieldValue.serverTimestamp()\n    }\n    collection.doc(firebase.auth().currentUser.uid).set(details)\n    return { user, details }\n  }\n\n  setLoggeedInUser = user => {\n    localStorage.setItem(\"authUser\", JSON.stringify(user))\n  }\n\n  /**\n   * Returns the authenticated user\n   */\n  getAuthenticatedUser = () => {\n    if (!localStorage.getItem(\"authUser\")) return null\n    return JSON.parse(localStorage.getItem(\"authUser\"))\n  }\n\n  /**\n   * Handle the error\n   * @param {*} error\n   */\n  _handleError(error) {\n    // var errorCode = error.code;\n    var errorMessage = error.message\n    return errorMessage\n  }\n}\n\nlet _fireBaseBackend = null\n\n/**\n * Initilize the backend\n * @param {*} config\n */\nconst initFirebaseBackend = config => {\n  if (!_fireBaseBackend) {\n    _fireBaseBackend = new FirebaseAuthBackend(config)\n  }\n  return _fireBaseBackend\n}\n\n/**\n * Returns the firebase backend\n */\nconst getFirebaseBackend = () => {\n  return _fireBaseBackend\n}\n\nexport { initFirebaseBackend, getFirebaseBackend }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}