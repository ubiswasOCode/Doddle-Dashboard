{"ast":null,"code":"'use strict';\n\nvar assign = require('object-assign');\n\nvar Region = require('region-align');\n\nvar hasTouch = require('has-touch');\n\nvar once = require('./utils/once');\n\nvar mobileTest = global.navigator ? /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(global.navigator.userAgent) : false;\nvar isMobile = hasTouch && mobileTest;\n\nvar Helper = function (config) {\n  this.config = config;\n};\n\nvar EVENTS = {\n  move: isMobile ? 'touchmove' : 'mousemove',\n  up: isMobile ? 'touchend' : 'mouseup'\n};\n\nfunction emptyFn() {}\n\nfunction getPageCoords(event) {\n  var firstTouch;\n  var pageX = event.pageX;\n  var pageY = event.pageY;\n\n  if (isMobile && event.touches && (firstTouch = event.touches[0])) {\n    pageX = firstTouch.pageX;\n    pageY = firstTouch.pageY;\n  }\n\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n\nassign(Helper.prototype, {\n  /**\n   * Should be called on a mousedown event\n   *\n   * @param  {Event} event\n   * @return {[type]}       [description]\n   */\n  initDrag: function (event) {\n    this.onDragInit(event);\n    var events = this.config.events || EVENTS;\n    var onDragStart = once(this.onDragStart, this);\n    var target = isMobile ? event.target : global;\n\n    var mouseMoveListener = function (event) {\n      onDragStart(event);\n      this.onDrag(event);\n    }.bind(this);\n\n    var mouseUpListener = function (event) {\n      this.onDrop(event);\n      target.removeEventListener(events.move, mouseMoveListener);\n      target.removeEventListener(events.up, mouseUpListener);\n    }.bind(this);\n\n    target.addEventListener(events.move, mouseMoveListener, false);\n    target.addEventListener(events.up, mouseUpListener);\n  },\n  onDragInit: function (event) {\n    var config = {\n      diff: {\n        left: 0,\n        top: 0\n      }\n    };\n    this.state = {\n      config: config\n    };\n\n    if (this.config.region) {\n      this.state.initialRegion = Region.from(this.config.region);\n      this.state.dragRegion = config.dragRegion = this.state.initialRegion.clone();\n    }\n\n    if (this.config.constrainTo) {\n      this.state.constrainTo = Region.from(this.config.constrainTo);\n    }\n\n    this.callConfig('onDragInit', event);\n  },\n\n  /**\n   * Called when the first mousemove event occurs after drag is initialized\n   * @param  {Event} event\n   */\n  onDragStart: function (event) {\n    this.state.initPageCoords = getPageCoords(event);\n    this.state.didDrag = this.state.config.didDrag = true;\n    this.callConfig('onDragStart', event);\n  },\n\n  /**\n   * Called on all mousemove events after drag is initialized.\n   *\n   * @param  {Event} event\n   */\n  onDrag: function (event) {\n    var config = this.state.config;\n    var initPageCoords = this.state.initPageCoords;\n    var eventCoords = getPageCoords(event);\n    var diff = config.diff = {\n      left: eventCoords.pageX - initPageCoords.pageX,\n      top: eventCoords.pageY - initPageCoords.pageY\n    };\n\n    if (this.state.initialRegion) {\n      var dragRegion = config.dragRegion; //set the dragRegion to initial coords\n\n      dragRegion.set(this.state.initialRegion); //shift it to the new position\n\n      dragRegion.shift(diff);\n\n      if (this.state.constrainTo) {\n        //and finally constrain it if it's the case\n        var boolConstrained = dragRegion.constrainTo(this.state.constrainTo);\n        diff.left = dragRegion.left - this.state.initialRegion.left;\n        diff.top = dragRegion.top - this.state.initialRegion.top; // console.log(diff);\n      }\n\n      config.dragRegion = dragRegion;\n    }\n\n    this.callConfig('onDrag', event);\n  },\n\n  /**\n   * Called on the mouseup event on window\n   *\n   * @param  {Event} event\n   */\n  onDrop: function (event) {\n    this.callConfig('onDrop', event);\n    this.state = null;\n  },\n  callConfig: function (fnName, event) {\n    var config = this.state.config;\n    var args = [event, config];\n    var fn = this.config[fnName];\n\n    if (fn) {\n      fn.apply(this, args);\n    }\n  }\n});\n\nmodule.exports = function (event, config) {\n  if (config.scope) {\n    var skippedKeys = {\n      scope: 1,\n      region: 1,\n      constrainTo: 1\n    };\n    Object.keys(config).forEach(function (key) {\n      var value = config[key];\n\n      if (key in skippedKeys) {\n        return;\n      }\n\n      if (typeof value == 'function') {\n        config[key] = value.bind(config.scope);\n      }\n    });\n  }\n\n  var helper = new Helper(config);\n  helper.initDrag(event);\n  return helper;\n};","map":{"version":3,"sources":["/home/ocode/Downloads/Admin/node_modules/drag-helper/index.js"],"names":["assign","require","Region","hasTouch","once","mobileTest","global","navigator","test","userAgent","isMobile","Helper","config","EVENTS","move","up","emptyFn","getPageCoords","event","firstTouch","pageX","pageY","touches","prototype","initDrag","onDragInit","events","onDragStart","target","mouseMoveListener","onDrag","bind","mouseUpListener","onDrop","removeEventListener","addEventListener","diff","left","top","state","region","initialRegion","from","dragRegion","clone","constrainTo","callConfig","initPageCoords","didDrag","eventCoords","set","shift","boolConstrained","fnName","args","fn","apply","module","exports","scope","skippedKeys","Object","keys","forEach","key","value","helper"],"mappings":"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","sourcesContent":["'use strict';\n\nvar assign   = require('object-assign')\nvar Region   = require('region-align')\nvar hasTouch = require('has-touch')\nvar once     = require('./utils/once')\n\nvar mobileTest = global.navigator ?\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(global.navigator.userAgent) :\n    false\n\nvar isMobile = hasTouch && mobileTest;\n\nvar Helper = function(config){\n    this.config = config\n}\n\nvar EVENTS = {\n    move: isMobile? 'touchmove': 'mousemove',\n    up  : isMobile? 'touchend' : 'mouseup'\n}\n\nfunction emptyFn(){}\n\nfunction getPageCoords(event){\n    var firstTouch\n\n    var pageX = event.pageX\n    var pageY = event.pageY\n\n    if (isMobile && event.touches && (firstTouch = event.touches[0])){\n        pageX = firstTouch.pageX\n        pageY = firstTouch.pageY\n    }\n\n    return {\n        pageX: pageX,\n        pageY: pageY\n    }\n}\n\nassign(Helper.prototype, {\n\n    /**\n     * Should be called on a mousedown event\n     *\n     * @param  {Event} event\n     * @return {[type]}       [description]\n     */\n    initDrag: function(event) {\n\n        this.onDragInit(event)\n\n        var events = this.config.events || EVENTS\n\n        var onDragStart = once(this.onDragStart, this)\n        var target = isMobile?\n                        event.target:\n                        global\n\n        var mouseMoveListener = (function(event){\n            onDragStart(event)\n            this.onDrag(event)\n        }).bind(this)\n\n        var mouseUpListener = (function(event){\n\n            this.onDrop(event)\n\n            target.removeEventListener(events.move, mouseMoveListener)\n            target.removeEventListener(events.up, mouseUpListener)\n        }).bind(this)\n\n        target.addEventListener(events.move, mouseMoveListener, false)\n        target.addEventListener(events.up, mouseUpListener)\n    },\n\n    onDragInit: function(event){\n\n        var config = {\n            diff: {\n                left: 0,\n                top : 0\n            }\n        }\n        this.state = {\n            config: config\n        }\n\n        if (this.config.region){\n            this.state.initialRegion = Region.from(this.config.region)\n            this.state.dragRegion =\n                config.dragRegion =\n                    this.state.initialRegion.clone()\n        }\n        if (this.config.constrainTo){\n            this.state.constrainTo = Region.from(this.config.constrainTo)\n        }\n\n        this.callConfig('onDragInit', event)\n    },\n\n    /**\n     * Called when the first mousemove event occurs after drag is initialized\n     * @param  {Event} event\n     */\n    onDragStart: function(event){\n        this.state.initPageCoords = getPageCoords(event)\n\n        this.state.didDrag = this.state.config.didDrag = true\n        this.callConfig('onDragStart', event)\n    },\n\n    /**\n     * Called on all mousemove events after drag is initialized.\n     *\n     * @param  {Event} event\n     */\n    onDrag: function(event){\n\n        var config = this.state.config\n\n        var initPageCoords = this.state.initPageCoords\n        var eventCoords = getPageCoords(event)\n\n        var diff = config.diff = {\n            left: eventCoords.pageX - initPageCoords.pageX,\n            top : eventCoords.pageY - initPageCoords.pageY\n        }\n\n        if (this.state.initialRegion){\n            var dragRegion = config.dragRegion\n\n            //set the dragRegion to initial coords\n            dragRegion.set(this.state.initialRegion)\n\n            //shift it to the new position\n            dragRegion.shift(diff)\n\n            if (this.state.constrainTo){\n                //and finally constrain it if it's the case\n                var boolConstrained = dragRegion.constrainTo(this.state.constrainTo)\n\n                diff.left = dragRegion.left - this.state.initialRegion.left\n                diff.top  = dragRegion.top  - this.state.initialRegion.top\n\n                // console.log(diff);\n            }\n\n            config.dragRegion = dragRegion\n        }\n\n        this.callConfig('onDrag', event)\n    },\n\n    /**\n     * Called on the mouseup event on window\n     *\n     * @param  {Event} event\n     */\n    onDrop: function(event){\n        this.callConfig('onDrop', event)\n\n        this.state = null\n    },\n\n    callConfig: function(fnName, event){\n        var config = this.state.config\n        var args   = [event, config]\n\n        var fn = this.config[fnName]\n\n        if (fn){\n            fn.apply(this, args)\n        }\n    }\n\n})\n\nmodule.exports = function(event, config){\n\n    if (config.scope){\n        var skippedKeys = {\n            scope      : 1,\n            region     : 1,\n            constrainTo: 1\n        }\n\n        Object.keys(config).forEach(function(key){\n            var value = config[key]\n\n            if (key in skippedKeys){\n                return\n            }\n\n            if (typeof value == 'function'){\n                config[key] = value.bind(config.scope)\n            }\n        })\n    }\n    var helper = new Helper(config)\n\n    helper.initDrag(event)\n\n    return helper\n}"]},"metadata":{},"sourceType":"script"}