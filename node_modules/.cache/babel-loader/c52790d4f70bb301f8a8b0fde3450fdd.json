{"ast":null,"code":"import { GET_GROUPS_SUCCESS, GET_CHATS_SUCCESS, GET_GROUPS_FAIL, GET_CHATS_FAIL, GET_CONTACTS_SUCCESS, GET_CONTACTS_FAIL, GET_MESSAGES_SUCCESS, GET_MESSAGES_FAIL, POST_ADD_MESSAGE_SUCCESS, POST_ADD_MESSAGE_FAIL } from \"./actionTypes\";\nconst INIT_STATE = {\n  chats: [],\n  groups: [],\n  contacts: [],\n  messages: [],\n  error: {}\n};\nconst Calendar = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_CHATS_SUCCESS:\n      return {\n        ...state,\n        chats: action.payload\n      };\n    case GET_CHATS_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case GET_GROUPS_SUCCESS:\n      return {\n        ...state,\n        groups: action.payload\n      };\n    case GET_GROUPS_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case GET_CONTACTS_SUCCESS:\n      return {\n        ...state,\n        contacts: action.payload\n      };\n    case GET_CONTACTS_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case GET_MESSAGES_SUCCESS:\n      return {\n        ...state,\n        messages: action.payload\n      };\n    case GET_MESSAGES_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    case POST_ADD_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        messages: [...state.messages, action.payload]\n      };\n    case POST_ADD_MESSAGE_FAIL:\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["GET_GROUPS_SUCCESS","GET_CHATS_SUCCESS","GET_GROUPS_FAIL","GET_CHATS_FAIL","GET_CONTACTS_SUCCESS","GET_CONTACTS_FAIL","GET_MESSAGES_SUCCESS","GET_MESSAGES_FAIL","POST_ADD_MESSAGE_SUCCESS","POST_ADD_MESSAGE_FAIL","INIT_STATE","chats","groups","contacts","messages","error","Calendar","state","arguments","length","undefined","action","type","payload","_c","$RefreshReg$"],"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/src/store/chat/reducer.js"],"sourcesContent":["import {\n  GET_GROUPS_SUCCESS,\n  GET_CHATS_SUCCESS,\n  GET_GROUPS_FAIL,\n  GET_CHATS_FAIL,\n  GET_CONTACTS_SUCCESS,\n  GET_CONTACTS_FAIL,\n  GET_MESSAGES_SUCCESS,\n  GET_MESSAGES_FAIL,\n  POST_ADD_MESSAGE_SUCCESS,\n  POST_ADD_MESSAGE_FAIL,\n} from \"./actionTypes\"\n\nconst INIT_STATE = {\n  chats: [],\n  groups: [],\n  contacts: [],\n  messages: [],\n  error: {},\n}\n\nconst Calendar = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case GET_CHATS_SUCCESS:\n      return {\n        ...state,\n        chats: action.payload,\n      }\n\n    case GET_CHATS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_GROUPS_SUCCESS:\n      return {\n        ...state,\n        groups: action.payload,\n      }\n\n    case GET_GROUPS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_CONTACTS_SUCCESS:\n      return {\n        ...state,\n        contacts: action.payload,\n      }\n\n    case GET_CONTACTS_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case GET_MESSAGES_SUCCESS:\n      return {\n        ...state,\n        messages: action.payload,\n      }\n\n    case GET_MESSAGES_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    case POST_ADD_MESSAGE_SUCCESS:\n      return {\n        ...state,\n        messages: [...state.messages, action.payload],\n      }\n\n    case POST_ADD_MESSAGE_FAIL:\n      return {\n        ...state,\n        error: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default Calendar\n"],"mappings":"AAAA,SACEA,kBAAkB,EAClBC,iBAAiB,EACjBC,eAAe,EACfC,cAAc,EACdC,oBAAoB,EACpBC,iBAAiB,EACjBC,oBAAoB,EACpBC,iBAAiB,EACjBC,wBAAwB,EACxBC,qBAAqB,QAChB,eAAe;AAEtB,MAAMC,UAAU,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,CAAC;AACV,CAAC;AAED,MAAMC,QAAQ,GAAG,SAAAA,CAAA,EAAgC;EAAA,IAA/BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGR,UAAU;EAAA,IAAEW,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKrB,iBAAiB;MACpB,OAAO;QACL,GAAGgB,KAAK;QACRN,KAAK,EAAEU,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKpB,cAAc;MACjB,OAAO;QACL,GAAGc,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKvB,kBAAkB;MACrB,OAAO;QACL,GAAGiB,KAAK;QACRL,MAAM,EAAES,MAAM,CAACE;MACjB,CAAC;IAEH,KAAKrB,eAAe;MAClB,OAAO;QACL,GAAGe,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKnB,oBAAoB;MACvB,OAAO;QACL,GAAGa,KAAK;QACRJ,QAAQ,EAAEQ,MAAM,CAACE;MACnB,CAAC;IAEH,KAAKlB,iBAAiB;MACpB,OAAO;QACL,GAAGY,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKjB,oBAAoB;MACvB,OAAO;QACL,GAAGW,KAAK;QACRH,QAAQ,EAAEO,MAAM,CAACE;MACnB,CAAC;IAEH,KAAKhB,iBAAiB;MACpB,OAAO;QACL,GAAGU,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACE;MAChB,CAAC;IAEH,KAAKf,wBAAwB;MAC3B,OAAO;QACL,GAAGS,KAAK;QACRH,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAQ,EAAEO,MAAM,CAACE,OAAO;MAC9C,CAAC;IAEH,KAAKd,qBAAqB;MACxB,OAAO;QACL,GAAGQ,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACE;MAChB,CAAC;IAEH;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAAAO,EAAA,GAjEKR,QAAQ;AAmEd,eAAeA,QAAQ;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}