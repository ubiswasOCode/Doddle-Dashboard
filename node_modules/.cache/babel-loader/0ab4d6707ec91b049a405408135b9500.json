{"ast":null,"code":"import i18n from \"i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport translationGr from \"./locales/gr/translation.json\";\nimport translationIT from \"./locales/it/translation.json\";\nimport translationRS from \"./locales/rs/translation.json\";\nimport translationSP from \"./locales/sp/translation.json\";\nimport translationENG from \"./locales/eng/translation.json\"; // the translations\n\nconst resources = {\n  gr: {\n    translation: translationGr\n  },\n  it: {\n    translation: translationIT\n  },\n  rs: {\n    translation: translationRS\n  },\n  sp: {\n    translation: translationSP\n  },\n  eng: {\n    translation: translationENG\n  }\n};\nconst language = localStorage.getItem(\"I18N_LANGUAGE\");\n\nif (!language) {\n  localStorage.setItem(\"I18N_LANGUAGE\", \"en\");\n}\n\ni18n.use(detector).use(initReactI18next) // passes i18n down to react-i18next\n.init({\n  resources,\n  lng: localStorage.getItem(\"I18N_LANGUAGE\") || \"en\",\n  fallbackLng: \"en\",\n  // use en if detected lng is not available\n  keySeparator: false,\n  // we do not use keys in form messages.welcome\n  interpolation: {\n    escapeValue: false // react already safes from xss\n\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/home/ocode/Downloads/Admin/src/i18n.js"],"names":["i18n","detector","initReactI18next","translationGr","translationIT","translationRS","translationSP","translationENG","resources","gr","translation","it","rs","sp","eng","language","localStorage","getItem","setItem","use","init","lng","fallbackLng","keySeparator","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,cAAP,MAA2B,gCAA3B,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,WAAW,EAAEP;AADX,GADY;AAIhBQ,EAAAA,EAAE,EAAE;AACFD,IAAAA,WAAW,EAAEN;AADX,GAJY;AAOhBQ,EAAAA,EAAE,EAAE;AACFF,IAAAA,WAAW,EAAEL;AADX,GAPY;AAUhBQ,EAAAA,EAAE,EAAE;AACFH,IAAAA,WAAW,EAAEJ;AADX,GAVY;AAahBQ,EAAAA,GAAG,EAAE;AACHJ,IAAAA,WAAW,EAAEH;AADV;AAbW,CAAlB;AAkBA,MAAMQ,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAjB;;AACA,IAAI,CAACF,QAAL,EAAe;AACbC,EAAAA,YAAY,CAACE,OAAb,CAAqB,eAArB,EAAsC,IAAtC;AACD;;AAEDlB,IAAI,CACDmB,GADH,CACOlB,QADP,EAEGkB,GAFH,CAEOjB,gBAFP,EAEyB;AAFzB,CAGGkB,IAHH,CAGQ;AACJZ,EAAAA,SADI;AAEJa,EAAAA,GAAG,EAAEL,YAAY,CAACC,OAAb,CAAqB,eAArB,KAAyC,IAF1C;AAGJK,EAAAA,WAAW,EAAE,IAHT;AAGe;AAEnBC,EAAAA,YAAY,EAAE,KALV;AAKiB;AAErBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,KADA,CACO;;AADP;AAPX,CAHR;AAeA,eAAezB,IAAf","sourcesContent":["import i18n from \"i18next\"\nimport detector from \"i18next-browser-languagedetector\"\nimport { initReactI18next } from \"react-i18next\"\n\nimport translationGr from \"./locales/gr/translation.json\"\nimport translationIT from \"./locales/it/translation.json\"\nimport translationRS from \"./locales/rs/translation.json\"\nimport translationSP from \"./locales/sp/translation.json\"\nimport translationENG from \"./locales/eng/translation.json\"\n\n// the translations\nconst resources = {\n  gr: {\n    translation: translationGr,\n  },\n  it: {\n    translation: translationIT,\n  },\n  rs: {\n    translation: translationRS,\n  },\n  sp: {\n    translation: translationSP,\n  },\n  eng: {\n    translation: translationENG,\n  },\n}\n\nconst language = localStorage.getItem(\"I18N_LANGUAGE\")\nif (!language) {\n  localStorage.setItem(\"I18N_LANGUAGE\", \"en\")\n}\n\ni18n\n  .use(detector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: localStorage.getItem(\"I18N_LANGUAGE\") || \"en\",\n    fallbackLng: \"en\", // use en if detected lng is not available\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  })\n\nexport default i18n\n"]},"metadata":{},"sourceType":"module"}