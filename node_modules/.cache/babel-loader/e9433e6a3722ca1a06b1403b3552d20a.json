{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nexports.default = validate;\nvar _isRegExp = require('lodash/isRegExp');\nvar _isRegExp2 = _interopRequireDefault(_isRegExp);\nvar _utils = require('./utils');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar REGEX = /^\\/(.*)\\/([gim]*)$/; // regular expression to test a regular expression\n\nfunction asRegExp(pattern) {\n  // if regex then return it\n  if ((0, _isRegExp2.default)(pattern)) {\n    return pattern;\n  }\n\n  // if string then test for valid regex then convert to regex and return\n  var match = pattern.match(REGEX);\n  if (match) {\n    return new RegExp(match[1], match[2]);\n  }\n  return new RegExp(pattern);\n}\nfunction validate(value, context) {\n  var constraint = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if ((0, _utils.isEmpty)(value)) return true;\n  var values = Array.isArray(constraint.value) ? constraint.value : [constraint.value];\n  return values.some(function (expression) {\n    return asRegExp(expression).test(value);\n  }) || constraint.errorMessage || false;\n}","map":{"version":3,"names":["exports","__esModule","default","validate","_isRegExp","require","_isRegExp2","_interopRequireDefault","_utils","obj","REGEX","asRegExp","pattern","match","RegExp","value","context","constraint","arguments","length","undefined","isEmpty","values","Array","isArray","some","expression","test","errorMessage"],"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/node_modules/availity-reactstrap-validation/lib/AvValidator/pattern.js"],"sourcesContent":["'use strict';\n\nexports.__esModule = true;\nexports.default = validate;\n\nvar _isRegExp = require('lodash/isRegExp');\n\nvar _isRegExp2 = _interopRequireDefault(_isRegExp);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar REGEX = /^\\/(.*)\\/([gim]*)$/; // regular expression to test a regular expression\n\nfunction asRegExp(pattern) {\n  // if regex then return it\n  if ((0, _isRegExp2.default)(pattern)) {\n    return pattern;\n  }\n\n  // if string then test for valid regex then convert to regex and return\n  var match = pattern.match(REGEX);\n  if (match) {\n    return new RegExp(match[1], match[2]);\n  }\n\n  return new RegExp(pattern);\n}\n\nfunction validate(value, context) {\n  var constraint = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if ((0, _utils.isEmpty)(value)) return true;\n\n  var values = Array.isArray(constraint.value) ? constraint.value : [constraint.value];\n\n  return values.some(function (expression) {\n    return asRegExp(expression).test(value);\n  }) || constraint.errorMessage || false;\n}"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAGC,QAAQ;AAE1B,IAAIC,SAAS,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAE1C,IAAIC,UAAU,GAAGC,sBAAsB,CAACH,SAAS,CAAC;AAElD,IAAII,MAAM,GAAGH,OAAO,CAAC,SAAS,CAAC;AAE/B,SAASE,sBAAsBA,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACR,UAAU,GAAGQ,GAAG,GAAG;IAAEP,OAAO,EAAEO;EAAI,CAAC;AAAE;AAE9F,IAAIC,KAAK,GAAG,oBAAoB,CAAC,CAAC;;AAElC,SAASC,QAAQA,CAACC,OAAO,EAAE;EACzB;EACA,IAAI,CAAC,CAAC,EAAEN,UAAU,CAACJ,OAAO,EAAEU,OAAO,CAAC,EAAE;IACpC,OAAOA,OAAO;EAChB;;EAEA;EACA,IAAIC,KAAK,GAAGD,OAAO,CAACC,KAAK,CAACH,KAAK,CAAC;EAChC,IAAIG,KAAK,EAAE;IACT,OAAO,IAAIC,MAAM,CAACD,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;EACvC;EAEA,OAAO,IAAIC,MAAM,CAACF,OAAO,CAAC;AAC5B;AAEA,SAAST,QAAQA,CAACY,KAAK,EAAEC,OAAO,EAAE;EAChC,IAAIC,UAAU,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEvF,IAAI,CAAC,CAAC,EAAEV,MAAM,CAACa,OAAO,EAAEN,KAAK,CAAC,EAAE,OAAO,IAAI;EAE3C,IAAIO,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACP,UAAU,CAACF,KAAK,CAAC,GAAGE,UAAU,CAACF,KAAK,GAAG,CAACE,UAAU,CAACF,KAAK,CAAC;EAEpF,OAAOO,MAAM,CAACG,IAAI,CAAC,UAAUC,UAAU,EAAE;IACvC,OAAOf,QAAQ,CAACe,UAAU,CAAC,CAACC,IAAI,CAACZ,KAAK,CAAC;EACzC,CAAC,CAAC,IAAIE,UAAU,CAACW,YAAY,IAAI,KAAK;AACxC"},"metadata":{},"sourceType":"script"}