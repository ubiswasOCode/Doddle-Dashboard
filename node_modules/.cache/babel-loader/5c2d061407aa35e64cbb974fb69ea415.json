{"ast":null,"code":"import { takeEvery, fork, put, all, call } from \"redux-saga/effects\";\n\n//Account Redux states\nimport { REGISTER_USER } from \"./actionTypes\";\nimport { registerUserSuccessful, registerUserFailed } from \"./actions\";\n\n//Include Both Helper File with needed methods\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\";\nimport { postFakeRegister, postJwtRegister } from \"../../../helpers/fakebackend_helper\";\n\n// initialize relavant method of both Auth\nconst fireBaseBackend = getFirebaseBackend();\n\n// Is user register successfull then direct plot user in redux.\nfunction* registerUser(_ref) {\n  let {\n    payload: {\n      user\n    }\n  } = _ref;\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.registerUser, user.email, user.password);\n      yield put(registerUserSuccessful(response));\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\n      const response = yield call(postJwtRegister, \"/post-jwt-register\", user);\n      console.log(response);\n      yield put(registerUserSuccessful(response));\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"fake\") {\n      const response = yield call(postFakeRegister, user);\n      yield put(registerUserSuccessful(response));\n    }\n  } catch (error) {\n    yield put(registerUserFailed(error));\n  }\n}\nexport function* watchUserRegister() {\n  yield takeEvery(REGISTER_USER, registerUser);\n}\nfunction* accountSaga() {\n  yield all([fork(watchUserRegister)]);\n}\nexport default accountSaga;","map":{"version":3,"names":["takeEvery","fork","put","all","call","REGISTER_USER","registerUserSuccessful","registerUserFailed","getFirebaseBackend","postFakeRegister","postJwtRegister","fireBaseBackend","registerUser","_ref","payload","user","process","env","REACT_APP_DEFAULTAUTH","response","email","password","console","log","error","watchUserRegister","accountSaga"],"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/src/store/auth/register/saga.js"],"sourcesContent":["import { takeEvery, fork, put, all, call } from \"redux-saga/effects\"\n\n//Account Redux states\nimport { REGISTER_USER } from \"./actionTypes\"\nimport { registerUserSuccessful, registerUserFailed } from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport { getFirebaseBackend } from \"../../../helpers/firebase_helper\"\nimport {\n  postFakeRegister,\n  postJwtRegister,\n} from \"../../../helpers/fakebackend_helper\"\n\n// initialize relavant method of both Auth\nconst fireBaseBackend = getFirebaseBackend()\n\n// Is user register successfull then direct plot user in redux.\nfunction* registerUser({ payload: { user } }) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(\n        fireBaseBackend.registerUser,\n        user.email,\n        user.password\n      )\n      yield put(registerUserSuccessful(response))\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\n      const response = yield call(postJwtRegister, \"/post-jwt-register\", user)\n      console.log(response)\n      yield put(registerUserSuccessful(response))\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"fake\") {\n      const response = yield call(postFakeRegister, user)\n      yield put(registerUserSuccessful(response))\n    }\n  } catch (error) {\n    yield put(registerUserFailed(error))\n  }\n}\n\nexport function* watchUserRegister() {\n  yield takeEvery(REGISTER_USER, registerUser)\n}\n\nfunction* accountSaga() {\n  yield all([fork(watchUserRegister)])\n}\n\nexport default accountSaga\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;;AAEpE;AACA,SAASC,aAAa,QAAQ,eAAe;AAC7C,SAASC,sBAAsB,EAAEC,kBAAkB,QAAQ,WAAW;;AAEtE;AACA,SAASC,kBAAkB,QAAQ,kCAAkC;AACrE,SACEC,gBAAgB,EAChBC,eAAe,QACV,qCAAqC;;AAE5C;AACA,MAAMC,eAAe,GAAGH,kBAAkB,CAAC,CAAC;;AAE5C;AACA,UAAUI,YAAYA,CAAAC,IAAA,EAAwB;EAAA,IAAvB;IAAEC,OAAO,EAAE;MAAEC;IAAK;EAAE,CAAC,GAAAF,IAAA;EAC1C,IAAI;IACF,IAAIG,OAAO,CAACC,GAAG,CAACC,qBAAqB,KAAK,UAAU,EAAE;MACpD,MAAMC,QAAQ,GAAG,MAAMf,IAAI,CACzBO,eAAe,CAACC,YAAY,EAC5BG,IAAI,CAACK,KAAK,EACVL,IAAI,CAACM,QACP,CAAC;MACD,MAAMnB,GAAG,CAACI,sBAAsB,CAACa,QAAQ,CAAC,CAAC;IAC7C,CAAC,MAAM,IAAIH,OAAO,CAACC,GAAG,CAACC,qBAAqB,KAAK,KAAK,EAAE;MACtD,MAAMC,QAAQ,GAAG,MAAMf,IAAI,CAACM,eAAe,EAAE,oBAAoB,EAAEK,IAAI,CAAC;MACxEO,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrB,MAAMjB,GAAG,CAACI,sBAAsB,CAACa,QAAQ,CAAC,CAAC;IAC7C,CAAC,MAAM,IAAIH,OAAO,CAACC,GAAG,CAACC,qBAAqB,KAAK,MAAM,EAAE;MACvD,MAAMC,QAAQ,GAAG,MAAMf,IAAI,CAACK,gBAAgB,EAAEM,IAAI,CAAC;MACnD,MAAMb,GAAG,CAACI,sBAAsB,CAACa,QAAQ,CAAC,CAAC;IAC7C;EACF,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMtB,GAAG,CAACK,kBAAkB,CAACiB,KAAK,CAAC,CAAC;EACtC;AACF;AAEA,OAAO,UAAUC,iBAAiBA,CAAA,EAAG;EACnC,MAAMzB,SAAS,CAACK,aAAa,EAAEO,YAAY,CAAC;AAC9C;AAEA,UAAUc,WAAWA,CAAA,EAAG;EACtB,MAAMvB,GAAG,CAAC,CAACF,IAAI,CAACwB,iBAAiB,CAAC,CAAC,CAAC;AACtC;AAEA,eAAeC,WAAW"},"metadata":{},"sourceType":"module"}