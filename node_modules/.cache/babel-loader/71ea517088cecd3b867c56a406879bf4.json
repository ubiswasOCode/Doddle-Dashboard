{"ast":null,"code":"var _jsxFileName = \"/home/ocode-2023/Desktop/Dashboard/Admin/src/pages/Tasks/tasks-kanban.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { isEmpty, map } from \"lodash\"; //Import Breadcrumb\n\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"; //Import Task Cards\n\nimport UncontrolledBoard from \"./UncontrolledBoard\";\nimport \"../../assets/scss/tasks.scss\";\nimport { getTasks } from \"../../store/tasks/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TasksKanban = props => {\n  _s();\n\n  const {\n    tasks,\n    onGetTasks\n  } = props;\n  useEffect(() => {\n    onGetTasks();\n  }, [onGetTasks]);\n  const data = map(tasks, task => ({ ...task,\n    cards: task.tasks\n  }));\n  data.length = Math.min(data.length, 3);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: \"Tasks\",\n        breadcrumbItem: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), !isEmpty(data) && /*#__PURE__*/_jsxDEV(UncontrolledBoard, {\n        board: {\n          columns: data\n        },\n        content: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TasksKanban, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TasksKanban;\nTasksKanban.propTypes = {\n  tasks: PropTypes.array,\n  onGetTasks: PropTypes.func\n};\n\nconst mapStateToProps = ({\n  tasks\n}) => ({\n  tasks: tasks.tasks\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onGetTasks: () => dispatch(getTasks())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TasksKanban));\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksKanban\");","map":{"version":3,"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/src/pages/Tasks/tasks-kanban.js"],"names":["React","useEffect","PropTypes","connect","withRouter","isEmpty","map","Breadcrumbs","UncontrolledBoard","getTasks","TasksKanban","props","tasks","onGetTasks","data","task","cards","length","Math","min","columns","propTypes","array","func","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,EAAkBC,GAAlB,QAA6B,QAA7B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,oCAAxB,C,CAEA;;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,OAAO,8BAAP;AACA,SAASC,QAAT,QAAyB,2BAAzB;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBF,KAA9B;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;AAIA,QAAMC,IAAI,GAAGR,GAAG,CAACM,KAAD,EAAQG,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWC,IAAAA,KAAK,EAAED,IAAI,CAACH;AAAvB,GAAL,CAAZ,CAAhB;AACAE,EAAAA,IAAI,CAACG,MAAL,GAAcC,IAAI,CAACC,GAAL,CAASL,IAAI,CAACG,MAAd,EAAsB,CAAtB,CAAd;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BAEI,QAAC,WAAD;AAAa,QAAA,KAAK,EAAC,OAAnB;AAA2B,QAAA,cAAc,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGK,CAACZ,OAAO,CAACS,IAAD,CAAR,iBACC,QAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE;AAAEM,UAAAA,OAAO,EAAEN;AAAX,SAA1B;AAA6C,QAAA,OAAO,EAAEF;AAAtD;AAAA;AAAA;AAAA;AAAA,cAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArBD;;GAAMF,W;;KAAAA,W;AAuBNA,WAAW,CAACW,SAAZ,GAAwB;AACtBT,EAAAA,KAAK,EAAEV,SAAS,CAACoB,KADK;AAEtBT,EAAAA,UAAU,EAAEX,SAAS,CAACqB;AAFA,CAAxB;;AAKA,MAAMC,eAAe,GAAG,CAAC;AAAEZ,EAAAA;AAAF,CAAD,MAAgB;AACtCA,EAAAA,KAAK,EAAEA,KAAK,CAACA;AADyB,CAAhB,CAAxB;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,UAAU,EAAE,MAAMa,QAAQ,CAACjB,QAAQ,EAAT;AADY,CAAL,CAAnC;;AAIA,eAAeN,OAAO,CACpBqB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbrB,UAAU,CAACM,WAAD,CAHG,CAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport { isEmpty, map } from \"lodash\"\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\n\n//Import Task Cards\nimport UncontrolledBoard from \"./UncontrolledBoard\"\n\nimport \"../../assets/scss/tasks.scss\"\nimport { getTasks } from \"../../store/tasks/actions\"\n\nconst TasksKanban = props => {\n  const { tasks, onGetTasks } = props\n\n  useEffect(() => {\n    onGetTasks()\n  }, [onGetTasks])\n\n  const data = map(tasks, task => ({ ...task, cards: task.tasks }))\n  data.length = Math.min(data.length, 3)\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n          {/* Render Breadcrumbs */}\n          <Breadcrumbs title=\"Tasks\" breadcrumbItem=\"Kanban Board\" />\n          {!isEmpty(data) && (\n            <UncontrolledBoard board={{ columns: data }} content={tasks} />\n          )}\n      </div>\n    </React.Fragment>\n  )\n}\n\nTasksKanban.propTypes = {\n  tasks: PropTypes.array,\n  onGetTasks: PropTypes.func,\n}\n\nconst mapStateToProps = ({ tasks }) => ({\n  tasks: tasks.tasks,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onGetTasks: () => dispatch(getTasks()),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(TasksKanban))\n"]},"metadata":{},"sourceType":"module"}