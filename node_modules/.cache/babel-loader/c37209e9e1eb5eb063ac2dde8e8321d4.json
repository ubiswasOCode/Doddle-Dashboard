{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createGenerateClassName;\nvar _warning = _interopRequireDefault(require(\"warning\"));\nvar escapeRegex = /([[\\].#*$><+~=|^:(),\"'`\\s])/g;\nfunction safePrefix(classNamePrefix) {\n  var prefix = String(classNamePrefix);\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(prefix.length < 256, \"Material-UI: the class name prefix is too long: \".concat(prefix, \".\")) : void 0; // Sanitize the string as will be used to prefix the generated class name.\n\n  return prefix.replace(escapeRegex, '-');\n} // Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's inspired by\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\n\nfunction createGenerateClassName() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$dangerouslyU = options.dangerouslyUseGlobalCSS,\n    dangerouslyUseGlobalCSS = _options$dangerouslyU === void 0 ? false : _options$dangerouslyU,\n    _options$productionPr = options.productionPrefix,\n    productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,\n    _options$seed = options.seed,\n    seed = _options$seed === void 0 ? '' : _options$seed;\n  var ruleCounter = 0;\n  return function (rule, styleSheet) {\n    ruleCounter += 1;\n    process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : void 0;\n    if (dangerouslyUseGlobalCSS && styleSheet && styleSheet.options.name) {\n      return \"\".concat(safePrefix(styleSheet.options.name), \"-\").concat(rule.key);\n    }\n    if (process.env.NODE_ENV === 'production') {\n      return \"\".concat(productionPrefix).concat(seed).concat(ruleCounter);\n    } // Help with debuggability.\n\n    if (styleSheet && styleSheet.options.classNamePrefix) {\n      return \"\".concat(safePrefix(styleSheet.options.classNamePrefix), \"-\").concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n    }\n    return \"\".concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","createGenerateClassName","_warning","escapeRegex","safePrefix","classNamePrefix","prefix","String","process","env","NODE_ENV","length","concat","replace","options","arguments","undefined","_options$dangerouslyU","dangerouslyUseGlobalCSS","_options$productionPr","productionPrefix","_options$seed","seed","ruleCounter","rule","styleSheet","join","name","key"],"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/node_modules/@material-ui/core/styles/createGenerateClassName.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createGenerateClassName;\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar escapeRegex = /([[\\].#*$><+~=|^:(),\"'`\\s])/g;\n\nfunction safePrefix(classNamePrefix) {\n  var prefix = String(classNamePrefix);\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(prefix.length < 256, \"Material-UI: the class name prefix is too long: \".concat(prefix, \".\")) : void 0; // Sanitize the string as will be used to prefix the generated class name.\n\n  return prefix.replace(escapeRegex, '-');\n} // Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's inspired by\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\n\n\nfunction createGenerateClassName() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$dangerouslyU = options.dangerouslyUseGlobalCSS,\n      dangerouslyUseGlobalCSS = _options$dangerouslyU === void 0 ? false : _options$dangerouslyU,\n      _options$productionPr = options.productionPrefix,\n      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,\n      _options$seed = options.seed,\n      seed = _options$seed === void 0 ? '' : _options$seed;\n  var ruleCounter = 0;\n  return function (rule, styleSheet) {\n    ruleCounter += 1;\n    process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : void 0;\n\n    if (dangerouslyUseGlobalCSS && styleSheet && styleSheet.options.name) {\n      return \"\".concat(safePrefix(styleSheet.options.name), \"-\").concat(rule.key);\n    }\n\n    if (process.env.NODE_ENV === 'production') {\n      return \"\".concat(productionPrefix).concat(seed).concat(ruleCounter);\n    } // Help with debuggability.\n\n\n    if (styleSheet && styleSheet.options.classNamePrefix) {\n      return \"\".concat(safePrefix(styleSheet.options.classNamePrefix), \"-\").concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n    }\n\n    return \"\".concat(rule.key, \"-\").concat(seed).concat(ruleCounter);\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}