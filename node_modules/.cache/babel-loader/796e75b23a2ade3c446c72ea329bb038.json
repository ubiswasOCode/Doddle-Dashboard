{"ast":null,"code":"var _jsxFileName = \"/home/ocode-2023/Desktop/Dashboard/Admin/src/pages/Tasks/tasks-kanban.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { isEmpty, map } from \"lodash\";\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\n\n//Import Task Cards\nimport UncontrolledBoard from \"./UncontrolledBoard\";\nimport \"../../assets/scss/tasks.scss\";\nimport { getTasks } from \"../../store/tasks/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksKanban = props => {\n  _s();\n  const {\n    tasks,\n    onGetTasks\n  } = props;\n  useEffect(() => {\n    onGetTasks();\n  }, [onGetTasks]);\n  const data = map(tasks, task => ({\n    ...task,\n    cards: task.tasks\n  }));\n  data.length = Math.min(data.length, 3);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        title: \"Tasks\",\n        breadcrumbItem: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), !isEmpty(data) && /*#__PURE__*/_jsxDEV(UncontrolledBoard, {\n        board: {\n          columns: data\n        },\n        content: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksKanban, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TasksKanban;\nTasksKanban.propTypes = {\n  tasks: PropTypes.array,\n  onGetTasks: PropTypes.func\n};\nconst mapStateToProps = _ref => {\n  let {\n    tasks\n  } = _ref;\n  return {\n    tasks: tasks.tasks\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  onGetTasks: () => dispatch(getTasks())\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TasksKanban));\nvar _c;\n$RefreshReg$(_c, \"TasksKanban\");","map":{"version":3,"names":["React","useEffect","PropTypes","connect","withRouter","isEmpty","map","Breadcrumbs","UncontrolledBoard","getTasks","jsxDEV","_jsxDEV","TasksKanban","props","_s","tasks","onGetTasks","data","task","cards","length","Math","min","Fragment","children","className","title","breadcrumbItem","fileName","_jsxFileName","lineNumber","columnNumber","board","columns","content","_c","propTypes","array","func","mapStateToProps","_ref","mapDispatchToProps","dispatch","$RefreshReg$"],"sources":["/home/ocode-2023/Desktop/Dashboard/Admin/src/pages/Tasks/tasks-kanban.js"],"sourcesContent":["import React, { useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport { isEmpty, map } from \"lodash\"\n\n//Import Breadcrumb\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\"\n\n//Import Task Cards\nimport UncontrolledBoard from \"./UncontrolledBoard\"\n\nimport \"../../assets/scss/tasks.scss\"\nimport { getTasks } from \"../../store/tasks/actions\"\n\nconst TasksKanban = props => {\n  const { tasks, onGetTasks } = props\n\n  useEffect(() => {\n    onGetTasks()\n  }, [onGetTasks])\n\n  const data = map(tasks, task => ({ ...task, cards: task.tasks }))\n  data.length = Math.min(data.length, 3)\n\n  return (\n    <React.Fragment>\n      <div className=\"page-content\">\n          {/* Render Breadcrumbs */}\n          <Breadcrumbs title=\"Tasks\" breadcrumbItem=\"Kanban Board\" />\n          {!isEmpty(data) && (\n            <UncontrolledBoard board={{ columns: data }} content={tasks} />\n          )}\n      </div>\n    </React.Fragment>\n  )\n}\n\nTasksKanban.propTypes = {\n  tasks: PropTypes.array,\n  onGetTasks: PropTypes.func,\n}\n\nconst mapStateToProps = ({ tasks }) => ({\n  tasks: tasks.tasks,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onGetTasks: () => dispatch(getTasks()),\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(TasksKanban))\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,OAAO,EAAEC,GAAG,QAAQ,QAAQ;;AAErC;AACA,OAAOC,WAAW,MAAM,oCAAoC;;AAE5D;AACA,OAAOC,iBAAiB,MAAM,qBAAqB;AAEnD,OAAO,8BAA8B;AACrC,SAASC,QAAQ,QAAQ,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAAAC,EAAA;EAC3B,MAAM;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGH,KAAK;EAEnCZ,SAAS,CAAC,MAAM;IACde,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMC,IAAI,GAAGX,GAAG,CAACS,KAAK,EAAEG,IAAI,KAAK;IAAE,GAAGA,IAAI;IAAEC,KAAK,EAAED,IAAI,CAACH;EAAM,CAAC,CAAC,CAAC;EACjEE,IAAI,CAACG,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACL,IAAI,CAACG,MAAM,EAAE,CAAC,CAAC;EAEtC,oBACET,OAAA,CAACX,KAAK,CAACuB,QAAQ;IAAAC,QAAA,eACbb,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAD,QAAA,gBAEzBb,OAAA,CAACJ,WAAW;QAACmB,KAAK,EAAC,OAAO;QAACC,cAAc,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC1D,CAAC1B,OAAO,CAACY,IAAI,CAAC,iBACbN,OAAA,CAACH,iBAAiB;QAACwB,KAAK,EAAE;UAAEC,OAAO,EAAEhB;QAAK,CAAE;QAACiB,OAAO,EAAEnB;MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC/D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB,CAAC;AAAAjB,EAAA,CArBKF,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAuBjBA,WAAW,CAACwB,SAAS,GAAG;EACtBrB,KAAK,EAAEb,SAAS,CAACmC,KAAK;EACtBrB,UAAU,EAAEd,SAAS,CAACoC;AACxB,CAAC;AAED,MAAMC,eAAe,GAAGC,IAAA;EAAA,IAAC;IAAEzB;EAAM,CAAC,GAAAyB,IAAA;EAAA,OAAM;IACtCzB,KAAK,EAAEA,KAAK,CAACA;EACf,CAAC;AAAA,CAAC;AAEF,MAAM0B,kBAAkB,GAAGC,QAAQ,KAAK;EACtC1B,UAAU,EAAEA,CAAA,KAAM0B,QAAQ,CAACjC,QAAQ,CAAC,CAAC;AACvC,CAAC,CAAC;AAEF,eAAeN,OAAO,CACpBoC,eAAe,EACfE,kBACF,CAAC,CAACrC,UAAU,CAACQ,WAAW,CAAC,CAAC;AAAA,IAAAuB,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module"}